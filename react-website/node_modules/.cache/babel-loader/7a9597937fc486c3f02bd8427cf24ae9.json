{"ast":null,"code":"import axios from \"axios\";\nimport cookie from \"react-cookies\";\nimport moment from \"moment\";\n\n// export const BASE_URL = 'http://192.168.1.233:8000/';\nexport const BASE_URL = 'http://127.0.0.1:8000/';\nexport const formatNS = dateString => {\n  const [year, month, day] = dateString.split('-');\n  return `${day}/${month}/${year}`;\n};\nexport const formatDate = date => {\n  return moment(date).format(' HH:mm - DD/MM/YYYY');\n};\nexport const endpoints = {\n  'login': '/o/token/',\n  'current_user': '/accounts/current_user/',\n  'signup': '/accounts/',\n  'list_reservations': '/reservations/',\n  'deactivate_reservation': id => `/reservations/${id}/deactivate/`,\n  // Thêm hàm cho deactivate với tham số id\n  'update_reservation': id => `/reservations/${id}/`,\n  // Update reservation endpoint\n  'roomtypes': '/roomtypes/',\n  'reservation_service': '/reservation_services/',\n  'services_of_reservation': id => `/reservations/${id}/services/`,\n  'services': '/services/',\n  'deactive_service': id => `/reservation_services/${id}/`,\n  'bills': '/bills/',\n  'customer_reservations': '/reservations/customer-reservations/'\n};\nexport const authAPI = () => {\n  const token = cookie.load('token');\n  return axios.create({\n    baseURL: BASE_URL,\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\nexport default axios.create({\n  baseURL: BASE_URL\n});\nexport const api = axios.create({\n  baseURL: BASE_URL\n});\nexport async function getRoomTypes() {\n  try {\n    const response = await api.get(\"/roomtypes/\");\n    // console.log(response.data)\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\nexport const addEmployee = async (username, name, email, role, password, isActive, avatar) => {\n  try {\n    const formData = new FormData();\n    formData.append(\"username\", username);\n    formData.append(\"name\", name); // Thêm trường name\n    formData.append(\"email\", email);\n    formData.append(\"role\", role);\n    formData.append(\"password\", password); // Thêm mật khẩu mặc định\n    formData.append(\"is_active\", isActive);\n    if (avatar) {\n      formData.append(\"avatar\", avatar);\n    }\n    const response = await api.post(\"/accounts/\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding employee:\", error);\n    throw error;\n  }\n};\nexport const uploadToCloudinary = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"upload_preset\", \"roomtype\"); // Thay \"your_upload_preset\" bằng giá trị thực tế từ Cloudinary\n\n  try {\n    const response = await axios.post(\"https://api.cloudinary.com/v1_1/thanhlem/image/upload\", formData);\n    return response.data.secure_url; // URL của ảnh đã được tải lên\n  } catch (error) {\n    console.error(\"Error uploading to Cloudinary: \", error);\n    throw error;\n  }\n};\nexport async function getEmployeeById(EmployeeId) {\n  try {\n    const result = await api.get(`/accounts/${EmployeeId}/`);\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error fetching room ${error.message}`);\n  }\n}","map":{"version":3,"names":["axios","cookie","moment","BASE_URL","formatNS","dateString","year","month","day","split","formatDate","date","format","endpoints","id","authAPI","token","load","create","baseURL","headers","api","getRoomTypes","response","get","data","error","Error","addEmployee","username","name","email","role","password","isActive","avatar","formData","FormData","append","post","console","uploadToCloudinary","file","secure_url","getEmployeeById","EmployeeId","result","message"],"sources":["/Users/ttc/Desktop/QLDA_QLKS_django_react/react-website/src/configs/APIs.js"],"sourcesContent":["    import axios from \"axios\";\n    import cookie from \"react-cookies\";\n    import moment from \"moment\";\n\n    // export const BASE_URL = 'http://192.168.1.233:8000/';\n    export const BASE_URL = 'http://127.0.0.1:8000/';\n\n    export const formatNS = (dateString) => {\n        const [year, month, day] = dateString.split('-');\n        return `${day}/${month}/${year}`;\n    };\n    \n    export const formatDate = (date) => {\n        return moment(date).format(' HH:mm - DD/MM/YYYY');\n    };\n\n\n    export const endpoints = {\n\n    'login': '/o/token/',\n    'current_user': '/accounts/current_user/',\n    'signup': '/accounts/',\n    'list_reservations' : '/reservations/',\n    'deactivate_reservation': (id) => `/reservations/${id}/deactivate/`, // Thêm hàm cho deactivate với tham số id\n    'update_reservation': (id) => `/reservations/${id}/`, // Update reservation endpoint\n    'roomtypes': '/roomtypes/',\n    'reservation_service' : '/reservation_services/',\n    'services_of_reservation': (id) => `/reservations/${id}/services/`,\n    'services' : '/services/',\n    'deactive_service': (id) => `/reservation_services/${id}/`, \n    'bills' : '/bills/',\n    'customer_reservations' : '/reservations/customer-reservations/',\n\n    }   \n\n\n\n    export const authAPI = () => {\n        const token = cookie.load('token');\n        return axios.create({\n            baseURL: BASE_URL,\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        });\n    }\n\n    export default axios.create({\n        baseURL: BASE_URL\n    });\n\n\n    export const api = axios.create({\n        baseURL: BASE_URL\n    })\n    \n    export async function getRoomTypes() {\n        try {\n            const response = await api.get(\"/roomtypes/\")\n            // console.log(response.data)\n            return response.data\n        } catch (error) {\n            throw new Error(error)\n        }\n    }\n\n    export const addEmployee = async (username, name, email, role, password, isActive, avatar) => {\n        try {\n          const formData = new FormData();\n          formData.append(\"username\", username);\n          formData.append(\"name\", name); // Thêm trường name\n          formData.append(\"email\", email);\n          formData.append(\"role\", role);\n          formData.append(\"password\", password); // Thêm mật khẩu mặc định\n          formData.append(\"is_active\", isActive);\n          if (avatar) {\n            formData.append(\"avatar\", avatar);\n          }\n      \n          const response = await api.post(\"/accounts/\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          });\n      \n          return response.data;\n        } catch (error) {\n          console.error(\"Error adding employee:\", error);\n          throw error;\n        }\n      };\n\n      export const uploadToCloudinary = async (file) => {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"upload_preset\", \"roomtype\"); // Thay \"your_upload_preset\" bằng giá trị thực tế từ Cloudinary\n    \n        try {\n            const response = await axios.post(\"https://api.cloudinary.com/v1_1/thanhlem/image/upload\", formData);\n            return response.data.secure_url; // URL của ảnh đã được tải lên\n        } catch (error) {\n            console.error(\"Error uploading to Cloudinary: \", error);\n            throw error;\n        }\n    };\n\n    export async function getEmployeeById(EmployeeId) {\n        try {\n            const result = await api.get(`/accounts/${EmployeeId}/`)\n            return result.data\n        } catch (error) {\n            throw new Error(`Error fetching room ${error.message}`)\n        }\n    }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}