{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebsiteQLKS_Django_React\\\\react-website\\\\src\\\\components\\\\room\\\\AddRoom.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { addRoom, getRoomTypes } from \"../utils/ApiFunctions\";\nimport RoomTypeSelector from \"../common/RoomTypeSelector\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nconst AddRoom = () => {\n  const [newRoom, setNewRoom] = useState({\n    nameRoom: \"\",\n    roomType: \"\",\n    status: 0,\n    active: true\n  });\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [imagePreview, setImagePreview] = useState(\"\");\n  const [roomTypes, setRoomTypes] = useState([]);\n  const handleRoomInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewRoom({\n      ...newRoom,\n      [name]: value\n    });\n  };\n  const handleImageChange = e => {\n    const selectedImage = e.target.files[0];\n    setNewRoom({\n      ...newRoom,\n      photo: selectedImage\n    });\n    setImagePreview(URL.createObjectURL(selectedImage));\n  };\n  useEffect(() => {\n    // Fetch room types from the API\n    const fetchRoomTypes = async () => {\n      try {\n        const response = await axios.get(\"/roomtypes/\");\n        setRoomTypes(response.data);\n      } catch (error) {\n        console.error(\"Error fetching room types:\", error);\n        setErrorMessage(\"Error fetching room types.\");\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const success = await addRoom(newRoom.nameRoom, newRoom.roomType, newRoom.status, newRoom.active);\n      console.log('API response:', success);\n      if (success) {\n        setSuccessMessage(\"A new room was added successfully!\");\n        setNewRoom({\n          nameRoom: \"\",\n          roomType: \"\",\n          status: 0,\n          active: true\n        });\n        setImagePreview(\"\");\n        setErrorMessage(\"\");\n      } else {\n        setErrorMessage(\"Error adding new room\");\n      }\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n    setTimeout(() => {\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n    }, 3000);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mt-5 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Add a New Room\"), successMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-success fade show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, successMessage), errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger fade show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nameRoom\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }, \"Room Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"nameRoom\",\n    name: \"nameRoom\",\n    value: newRoom.nameRoom,\n    onChange: handleRoomInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"roomType\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }, \"Room Type\"), /*#__PURE__*/React.createElement(RoomTypeSelector, {\n    handleRoomInputChange: handleRoomInputChange,\n    newRoom: newRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-grid gap-2 d-md-flex mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/existing-rooms\",\n    className: \"btn btn-outline-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }\n  }, \"Existing rooms\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-outline-primary ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, \"Save Room\")))))));\n};\nexport default AddRoom;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from 'axios';\n\n// import { Link } from \"react-router-dom\";\n\n// const AddRoom = () => {\n//   const [newRoom, setNewRoom] = useState({\n//     nameRoom: \"\",\n//     roomType: \"\", // Store ID of the selected RoomType\n//     status: 0,\n//     active: true\n//   });\n\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const [imagePreview, setImagePreview] = useState(\"\");\n//   const [roomTypes, setRoomTypes] = useState([]);\n//   const [showNewRoomTypeInput, setShowNewRoomTypeInput] = useState(false);\n//   const [newRoomType, setNewRoomType] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch room types from the API\n//     const fetchRoomTypes = async () => {\n//       try {\n// \t\tconst response = await axios.get(\"http://127.0.0.1:8000/roomtypes/\")\n// \t\t    setRoomTypes(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching room types:\", error);\n//         setErrorMessage(\"Error fetching room types.\");\n//       }\n//     };\n\n//     fetchRoomTypes();\n//   }, []);\n\n//   const handleRoomInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewRoom({ ...newRoom, [name]: value });\n//   };\n\n//   const handleImageChange = (e) => {\n//     const selectedImage = e.target.files[0];\n//     setNewRoom({ ...newRoom, photo: selectedImage });\n//     setImagePreview(URL.createObjectURL(selectedImage));\n//   };\n\n//   const handleNewRoomTypeInputChange = (e) => {\n//     setNewRoomType(e.target.value);\n//   };\n\n//   const handleAddNewRoomType = async () => {\n//     if (newRoomType !== \"\") {\n//       try {\n//         // Assuming API endpoint to add new room type\n//         const response = await axios.post('http://127.0.0.1:8000/room-types/', { nameRoomType: newRoomType });\n//         setRoomTypes([...roomTypes, response.data]);\n//         setNewRoomType(\"\");\n//         setShowNewRoomTypeInput(false);\n//       } catch (error) {\n//         console.error(\"Error adding new room type:\", error);\n//         setErrorMessage(\"Error adding new room type.\");\n//       }\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/rooms/', {\n//         nameRoom: newRoom.nameRoom,\n//         roomType: newRoom.roomType, // ID of the selected RoomType\n//         status: newRoom.status,\n//         active: newRoom.active\n//       });\n\n//       if (response.data) {\n//         setSuccessMessage(\"A new room was added successfully!\");\n//         setNewRoom({ nameRoom: \"\", roomType: \"\", status: 0, active: true });\n//         setImagePreview(\"\");\n//         setErrorMessage(\"\");\n//       } else {\n//         setErrorMessage(\"Error adding new room\");\n//       }\n//     } catch (error) {\n//       setErrorMessage(error.message);\n//     }\n//     setTimeout(() => {\n//       setSuccessMessage(\"\");\n//       setErrorMessage(\"\");\n//     }, 3000);\n//   };\n\n//   return (\n//     <>\n//       <section className=\"container mt-5 mb-5\">\n//         <div className=\"row justify-content-center\">\n//           <div className=\"col-md-8 col-lg-6\">\n//             <h2 className=\"mt-5 mb-2\">Add a New Room</h2>\n//             {successMessage && (\n//               <div className=\"alert alert-success fade show\">{successMessage}</div>\n//             )}\n\n//             {errorMessage && <div className=\"alert alert-danger fade show\">{errorMessage}</div>}\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"nameRoom\" className=\"form-label\">\n//                   Room Name\n//                 </label>\n//                 <input\n//                   required\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"nameRoom\"\n//                   name=\"nameRoom\"\n//                   value={newRoom.nameRoom}\n//                   onChange={handleRoomInputChange}\n//                 />\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"roomType\" className=\"form-label\">\n//                   Room Type\n//                 </label>\n//                 {roomTypes.length > 0 && (\n//                   <div>\n//                     <select\n//                       required\n//                       className=\"form-select\"\n//                       name=\"roomType\"\n//                       onChange={(e) => {\n//                         if (e.target.value === \"Add New\") {\n//                           setShowNewRoomTypeInput(true);\n//                         } else {\n//                           handleRoomInputChange(e);\n//                         }\n//                       }}\n//                       value={newRoom.roomType}\n//                     >\n//                       <option value=\"\">Select a room type</option>\n//                       {roomTypes.map((type) => (\n//                         <option key={type.id} value={type.id}>\n//                           {type.nameRoomType}\n//                         </option>\n//                       ))}\n//                       <option value=\"Add New\">Add New</option>\n//                     </select>\n//                     {showNewRoomTypeInput && (\n//                       <div className=\"mt-2\">\n//                         <div className=\"input-group\">\n//                           <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter New Room Type\"\n//                             value={newRoomType}\n//                             onChange={handleNewRoomTypeInputChange}\n//                           />\n//                           <button className=\"btn btn-hotel\" type=\"button\" onClick={handleAddNewRoomType}>\n//                             Add\n//                           </button>\n//                         </div>\n//                       </div>\n//                     )}\n//                   </div>\n//                 )}\n//               </div>\n\n//               <div className=\"d-grid gap-2 d-md-flex mt-2\">\n//                 <Link to={\"/existing-rooms\"} className=\"btn btn-outline-info\">\n//                   Existing rooms\n//                 </Link>\n//                 <button type=\"submit\" className=\"btn btn-outline-primary ml-5\">\n//                   Save Room\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n\n// export default AddRoom;","map":{"version":3,"names":["React","useState","useEffect","addRoom","getRoomTypes","RoomTypeSelector","Link","axios","AddRoom","newRoom","setNewRoom","nameRoom","roomType","status","active","successMessage","setSuccessMessage","errorMessage","setErrorMessage","imagePreview","setImagePreview","roomTypes","setRoomTypes","handleRoomInputChange","e","name","value","target","handleImageChange","selectedImage","files","photo","URL","createObjectURL","fetchRoomTypes","response","get","data","error","console","handleSubmit","preventDefault","success","log","message","setTimeout","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","required","type","id","onChange","to"],"sources":["D:/WebsiteQLKS_Django_React/react-website/src/components/room/AddRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { addRoom, getRoomTypes } from \"../utils/ApiFunctions\"\nimport RoomTypeSelector from \"../common/RoomTypeSelector\"\nimport { Link } from \"react-router-dom\"\nimport axios from 'axios';\n\n\nconst AddRoom = () => {\n\tconst [newRoom, setNewRoom] = useState({\n\t\tnameRoom: \"\",\n\t\troomType: \"\",\n\t\tstatus: 0,\n\t\tactive: true\n\t})\n\n\tconst [successMessage, setSuccessMessage] = useState(\"\")\n\tconst [errorMessage, setErrorMessage] = useState(\"\")\n\tconst [imagePreview, setImagePreview] = useState(\"\")\n  const [roomTypes, setRoomTypes] = useState([]);\n\n\n\tconst handleRoomInputChange = (e) => {\n\t\tconst { name, value } = e.target\n\t\tsetNewRoom({ ...newRoom, [name]: value })\n\t}\n\n\tconst handleImageChange = (e) => {\n\t\tconst selectedImage = e.target.files[0]\n\t\tsetNewRoom({ ...newRoom, photo: selectedImage })\n\t\tsetImagePreview(URL.createObjectURL(selectedImage))\n\t}\n\n  useEffect(() => {\n    // Fetch room types from the API\n    const fetchRoomTypes = async () => {\n      try {\n        const response = await axios.get(\"/roomtypes/\")\n        setRoomTypes(response.data);\n      } catch (error) {\n        console.error(\"Error fetching room types:\", error);\n        setErrorMessage(\"Error fetching room types.\");\n      }\n    };\n\n    fetchRoomTypes();\n  }, []);\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\ttry {\n\t\t\tconst success = await addRoom(newRoom.nameRoom, newRoom.roomType, newRoom.status, newRoom.active)\n\t\t\tconsole.log('API response:', success)\n\t\t\tif (success) {\n\t\t\t\tsetSuccessMessage(\"A new room was added successfully!\")\n\t\t\t\tsetNewRoom({ nameRoom: \"\", roomType: \"\", status: 0, active: true })\n\t\t\t\tsetImagePreview(\"\")\n\t\t\t\tsetErrorMessage(\"\")\n\t\t\t} else {\n\t\t\t\tsetErrorMessage(\"Error adding new room\")\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetErrorMessage(error.message)\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tsetSuccessMessage(\"\")\n\t\t\tsetErrorMessage(\"\")\n\t\t}, 3000)\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t  <section className=\"container mt-5 mb-5\">\n\t\t\t<div className=\"row justify-content-center\">\n\t\t\t  <div className=\"col-md-8 col-lg-6\">\n\t\t\t\t<h2 className=\"mt-5 mb-2\">Add a New Room</h2>\n\t\t\t\t{successMessage && (\n\t\t\t\t  <div className=\"alert alert-success fade show\">{successMessage}</div>\n\t\t\t\t)}\n\t\n\t\t\t\t{errorMessage && <div className=\"alert alert-danger fade show\">{errorMessage}</div>}\n\t\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t  <div className=\"mb-3\">\n\t\t\t\t\t<label htmlFor=\"nameRoom\" className=\"form-label\">\n\t\t\t\t\t  Room Name\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t  required\n\t\t\t\t\t  type=\"text\"\n\t\t\t\t\t  className=\"form-control\"\n\t\t\t\t\t  id=\"nameRoom\"\n\t\t\t\t\t  name=\"nameRoom\"\n\t\t\t\t\t  value={newRoom.nameRoom}\n\t\t\t\t\t  onChange={handleRoomInputChange}\n\t\t\t\t\t/>\n\t\t\t\t  </div>\n\t\t\t\t  <div className=\"mb-3\">\n\t\t\t\t\t<label htmlFor=\"roomType\" className=\"form-label\">\n\t\t\t\t\t  Room Type\n\t\t\t\t\t</label>\n\t\t\t\t\t<RoomTypeSelector\n\t\t\t\t\t  handleRoomInputChange={handleRoomInputChange}\n\t\t\t\t\t  newRoom={newRoom}\n\t\t\t\t\t/>\n\t\t\t\t  </div>\n\t\n\t\t\t\t  <div className=\"d-grid gap-2 d-md-flex mt-2\">\n\t\t\t\t\t<Link to={\"/existing-rooms\"} className=\"btn btn-outline-info\">\n\t\t\t\t\t  Existing rooms\n\t\t\t\t\t</Link>\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-outline-primary ml-5\">\n\t\t\t\t\t  Save Room\n\t\t\t\t\t</button>\n\t\t\t\t  </div>\n\t\t\t\t</form>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t  </section>\n\t\t</>\n\t  );\n\t};\n\t\n\texport default AddRoom;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from 'axios';\n\n// import { Link } from \"react-router-dom\";\n\n// const AddRoom = () => {\n//   const [newRoom, setNewRoom] = useState({\n//     nameRoom: \"\",\n//     roomType: \"\", // Store ID of the selected RoomType\n//     status: 0,\n//     active: true\n//   });\n\n//   const [successMessage, setSuccessMessage] = useState(\"\");\n//   const [errorMessage, setErrorMessage] = useState(\"\");\n//   const [imagePreview, setImagePreview] = useState(\"\");\n//   const [roomTypes, setRoomTypes] = useState([]);\n//   const [showNewRoomTypeInput, setShowNewRoomTypeInput] = useState(false);\n//   const [newRoomType, setNewRoomType] = useState(\"\");\n\n//   useEffect(() => {\n//     // Fetch room types from the API\n//     const fetchRoomTypes = async () => {\n//       try {\n// \t\tconst response = await axios.get(\"http://127.0.0.1:8000/roomtypes/\")\n// \t\t    setRoomTypes(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching room types:\", error);\n//         setErrorMessage(\"Error fetching room types.\");\n//       }\n//     };\n\n//     fetchRoomTypes();\n//   }, []);\n\n//   const handleRoomInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewRoom({ ...newRoom, [name]: value });\n//   };\n\n//   const handleImageChange = (e) => {\n//     const selectedImage = e.target.files[0];\n//     setNewRoom({ ...newRoom, photo: selectedImage });\n//     setImagePreview(URL.createObjectURL(selectedImage));\n//   };\n\n//   const handleNewRoomTypeInputChange = (e) => {\n//     setNewRoomType(e.target.value);\n//   };\n\n//   const handleAddNewRoomType = async () => {\n//     if (newRoomType !== \"\") {\n//       try {\n//         // Assuming API endpoint to add new room type\n//         const response = await axios.post('http://127.0.0.1:8000/room-types/', { nameRoomType: newRoomType });\n//         setRoomTypes([...roomTypes, response.data]);\n//         setNewRoomType(\"\");\n//         setShowNewRoomTypeInput(false);\n//       } catch (error) {\n//         console.error(\"Error adding new room type:\", error);\n//         setErrorMessage(\"Error adding new room type.\");\n//       }\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://127.0.0.1:8000/rooms/', {\n//         nameRoom: newRoom.nameRoom,\n//         roomType: newRoom.roomType, // ID of the selected RoomType\n//         status: newRoom.status,\n//         active: newRoom.active\n//       });\n\n//       if (response.data) {\n//         setSuccessMessage(\"A new room was added successfully!\");\n//         setNewRoom({ nameRoom: \"\", roomType: \"\", status: 0, active: true });\n//         setImagePreview(\"\");\n//         setErrorMessage(\"\");\n//       } else {\n//         setErrorMessage(\"Error adding new room\");\n//       }\n//     } catch (error) {\n//       setErrorMessage(error.message);\n//     }\n//     setTimeout(() => {\n//       setSuccessMessage(\"\");\n//       setErrorMessage(\"\");\n//     }, 3000);\n//   };\n\n//   return (\n//     <>\n//       <section className=\"container mt-5 mb-5\">\n//         <div className=\"row justify-content-center\">\n//           <div className=\"col-md-8 col-lg-6\">\n//             <h2 className=\"mt-5 mb-2\">Add a New Room</h2>\n//             {successMessage && (\n//               <div className=\"alert alert-success fade show\">{successMessage}</div>\n//             )}\n\n//             {errorMessage && <div className=\"alert alert-danger fade show\">{errorMessage}</div>}\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"nameRoom\" className=\"form-label\">\n//                   Room Name\n//                 </label>\n//                 <input\n//                   required\n//                   type=\"text\"\n//                   className=\"form-control\"\n//                   id=\"nameRoom\"\n//                   name=\"nameRoom\"\n//                   value={newRoom.nameRoom}\n//                   onChange={handleRoomInputChange}\n//                 />\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"roomType\" className=\"form-label\">\n//                   Room Type\n//                 </label>\n//                 {roomTypes.length > 0 && (\n//                   <div>\n//                     <select\n//                       required\n//                       className=\"form-select\"\n//                       name=\"roomType\"\n//                       onChange={(e) => {\n//                         if (e.target.value === \"Add New\") {\n//                           setShowNewRoomTypeInput(true);\n//                         } else {\n//                           handleRoomInputChange(e);\n//                         }\n//                       }}\n//                       value={newRoom.roomType}\n//                     >\n//                       <option value=\"\">Select a room type</option>\n//                       {roomTypes.map((type) => (\n//                         <option key={type.id} value={type.id}>\n//                           {type.nameRoomType}\n//                         </option>\n//                       ))}\n//                       <option value=\"Add New\">Add New</option>\n//                     </select>\n//                     {showNewRoomTypeInput && (\n//                       <div className=\"mt-2\">\n//                         <div className=\"input-group\">\n//                           <input\n//                             type=\"text\"\n//                             className=\"form-control\"\n//                             placeholder=\"Enter New Room Type\"\n//                             value={newRoomType}\n//                             onChange={handleNewRoomTypeInputChange}\n//                           />\n//                           <button className=\"btn btn-hotel\" type=\"button\" onClick={handleAddNewRoomType}>\n//                             Add\n//                           </button>\n//                         </div>\n//                       </div>\n//                     )}\n//                   </div>\n//                 )}\n//               </div>\n\n//               <div className=\"d-grid gap-2 d-md-flex mt-2\">\n//                 <Link to={\"/existing-rooms\"} className=\"btn btn-outline-info\">\n//                   Existing rooms\n//                 </Link>\n//                 <button type=\"submit\" className=\"btn btn-outline-primary ml-5\">\n//                   Save Room\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   );\n// };\n\n// export default AddRoom;\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module"}