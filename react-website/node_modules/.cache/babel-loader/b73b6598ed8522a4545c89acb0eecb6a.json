{"ast":null,"code":"var _jsxFileName = \"/Users/ttc/Desktop/QLDA_QLKS_django_react/react-website/src/components/MainContent/MainContent.js\";\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react';\nimport { useState, useEffect, useContext } from 'react';\nimport RoomCard from './RoomCard';\nimport { MyDispatchContext } from '../../configs/MyContext';\nimport { endpoints, authAPI } from \"../../configs/APIs\";\nconst MainContent = () => {\n  const [rooms, setRooms] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useContext(MyDispatchContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      const queryParams = new URLSearchParams(window.location.search);\n      const token = queryParams.get(\"token\");\n      const expires = new Date();\n      expires.setDate(expires.getDate() + 7); // Token expires in 7 days\n      if (token) {\n        // Lưu token vào cookie với thời gian sống (expires) và đường dẫn (path)\n        cookie.save(\"token\", token);\n        try {\n          // Yêu cầu thông tin người dùng từ API\n          let userdata = await authAPI(token).get(endpoints['current_user']);\n\n          // Lưu thông tin người dùng vào cookie\n          cookie.save('user', userdata.data);\n          // Cập nhật trạng thái người dùng trong Redux store\n          dispatch({\n            type: \"login\",\n            payload: userdata.data\n          });\n        } catch (error) {\n          console.error(\"Lỗi khi lấy thông tin người dùng:\", error);\n        }\n\n        // Sau khi lưu token, có thể xoá token khỏi URL để giữ sạch\n        // queryParams.delete(\"token\");\n        window.history.replaceState(null, null, window.location.pathname);\n        // window.history.replaceState(null, '', `${window.location.pathname}?${queryParams.toString()}`);\n      }\n      // Điều hướng tới trang chủ\n      navigate(\"/\");\n    };\n    fetchData();\n  }, [navigate, dispatch]);\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await authAPI().get(endpoints.roomtypes);\n        setRooms(response.data);\n        return response.data;\n      } catch (error) {\n        console.error(\"Failed to fetch rooms:\", error);\n      }\n    };\n    fetchRooms();\n  }, []);\n  return jsx(\"div\", {\n    css: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, jsx(\"div\", {\n    className: \"hotel-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Danh s\\xE1ch kh\\xE1ch s\\u1EA1n\"), rooms.length > 0 ? jsx(\"div\", {\n    className: \"room-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, rooms.map(room => jsx(RoomCard, {\n    key: room.id,\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }))) : jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Ch\\u01B0a c\\xF3 k\\u1EBFt qu\\u1EA3 t\\xECm ki\\u1EBFm\")));\n};\nconst styles = css`\n    margin-top: 100px; /* Khoảng cách giữa MainContent và Navbar */\n    padding: 20px; /* Để nội dung bên trong không bị sát vào viền */\n\n    .hotel-list {\n        background-color: #fff;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    }\n\n    .room-cards {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n        gap: 20px;\n    }\n`;\nexport default MainContent;","map":{"version":3,"names":["jsx","css","useState","useEffect","useContext","RoomCard","MyDispatchContext","endpoints","authAPI","MainContent","rooms","setRooms","navigate","useNavigate","dispatch","fetchData","queryParams","URLSearchParams","window","location","search","token","get","expires","Date","setDate","getDate","cookie","save","userdata","data","type","payload","error","console","history","replaceState","pathname","fetchRooms","response","roomtypes","styles","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","room","key","id"],"sources":["/Users/ttc/Desktop/QLDA_QLKS_django_react/react-website/src/components/MainContent/MainContent.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/react';\nimport { useState, useEffect, useContext } from 'react';\nimport RoomCard from './RoomCard';\nimport { MyDispatchContext } from '../../configs/MyContext';\nimport { endpoints, authAPI } from \"../../configs/APIs\";\n\nconst MainContent = () => {\n    const [rooms, setRooms] = useState([]);\n    const navigate = useNavigate();\n    const dispatch = useContext(MyDispatchContext);\n    useEffect(() => {\n        const fetchData = async () => {\n            const queryParams = new URLSearchParams(window.location.search);\n            const token = queryParams.get(\"token\");\n\t\t\tconst expires = new Date();\n\t\t\texpires.setDate(expires.getDate() + 7); // Token expires in 7 days\n            if (token) {\n                // Lưu token vào cookie với thời gian sống (expires) và đường dẫn (path)\n\t\t\t\tcookie.save(\"token\", token);\n\n                try {\n                    // Yêu cầu thông tin người dùng từ API\n                    let userdata = await authAPI(token).get(endpoints['current_user']);\n\n                    // Lưu thông tin người dùng vào cookie\n                    cookie.save('user', userdata.data);\n                    // Cập nhật trạng thái người dùng trong Redux store\n                    dispatch({\n                        type: \"login\",\n                        payload: userdata.data\n                    });\n                } catch (error) {\n                    console.error(\"Lỗi khi lấy thông tin người dùng:\", error);\n                }\n\n                // Sau khi lưu token, có thể xoá token khỏi URL để giữ sạch\n                // queryParams.delete(\"token\");\n                window.history.replaceState(null, null, window.location.pathname);\n\t\t\t\t// window.history.replaceState(null, '', `${window.location.pathname}?${queryParams.toString()}`);\n            } \n            // Điều hướng tới trang chủ\n            navigate(\"/\");\n        };\n\n        fetchData();\n    }, [navigate, dispatch]);\n    useEffect(() => {\n        const fetchRooms = async () => {\n            try {\n                const response = await authAPI().get(endpoints.roomtypes);\n                setRooms(response.data);\n                return response.data\n            } catch (error) {\n                console.error(\"Failed to fetch rooms:\", error);\n            }\n        };\n\n        fetchRooms();\n    }, []);\n\n    return (\n        <div css={styles}>\n            <div className=\"hotel-list\">\n                <h2>Danh sách khách sạn</h2>\n                {rooms.length > 0 ? (\n                    <div className=\"room-cards\">\n                        {rooms.map((room) => (\n                            <RoomCard key={room.id} room={room} />\n                        ))}\n                    </div>\n                ) : (\n                    <p>Chưa có kết quả tìm kiếm</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst styles = css`\n    margin-top: 100px; /* Khoảng cách giữa MainContent và Navbar */\n    padding: 20px; /* Để nội dung bên trong không bị sát vào viền */\n\n    .hotel-list {\n        background-color: #fff;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    }\n\n    .room-cards {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n        gap: 20px;\n    }\n`;\n\nexport default MainContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}