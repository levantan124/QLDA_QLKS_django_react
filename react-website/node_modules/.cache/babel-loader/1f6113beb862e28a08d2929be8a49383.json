{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebsiteQLKS_Django_React\\\\react-website\\\\src\\\\components\\\\Staff\\\\ManageBookings.js\";\n// /** @jsx jsx */\n// import { css, jsx } from '@emotion/react';\n// import { useEffect, useState } from 'react';\n// import { authAPI, endpoints } from '../../configs/APIs';\n// import { Modal, Button, Form } from 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const ReservationDetailsModal = ({ showModal, handleClose, selectedReservation, setSelectedReservation, handleUpdate, handleDelete }) => {\n//     const [availableRooms, setAvailableRooms] = useState([]);\n\n//     useEffect(() => {\n//         const fetchRooms = async () => {\n//             try {\n//                 const response = await authAPI().get('http://192.168.1.113:8000/rooms/');\n//                 setAvailableRooms(response.data);\n//             } catch (error) {\n//                 console.error('There was an error fetching the rooms!', error);\n//             }\n//         };\n\n//         fetchRooms();\n//     }, []);\n\n//     return (\n//         <Modal show={showModal} onHide={handleClose}>\n//             <Modal.Header closeButton>\n//                 <Modal.Title>Chi tiết Đặt Phòng</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//                 {selectedReservation && (\n//                     <Form>\n//                         <Form.Group controlId=\"formReservationId\">\n//                             <Form.Label>ID</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.id}\n//                                 readOnly\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formGuest\">\n//                             <Form.Label>Khách</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.guest}\n//                                 readOnly\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formRoom\">\n//                             <Form.Label>Phòng</Form.Label>\n//                             <Form.Select\n//                                 value={selectedReservation.room[0]?.nameRoom || ''}\n//                                 onChange={(e) => setSelectedReservation(prev => ({\n//                                     ...prev,\n//                                     room: availableRooms.filter(room => room.nameRoom === e.target.value)\n//                                 }))}\n//                             >\n//                                 <option value=\"\">Chọn phòng</option>\n//                                 {availableRooms.map(room => (\n//                                     <option key={room.id} value={room.nameRoom}>\n//                                         {room.nameRoom}\n//                                     </option>\n//                                 ))}\n//                             </Form.Select>\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formBookDate\">\n//                             <Form.Label>Ngày đặt</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.bookDate}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, bookDate: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formCheckin\">\n//                             <Form.Label>Nhận phòng</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.checkin}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkin: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formCheckout\">\n//                             <Form.Label>Trả phòng</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.checkout}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkout: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formActive\">\n//                             <Form.Label>Trạng thái đặt</Form.Label>\n//                             <Form.Check\n//                                 type=\"checkbox\"\n//                                 checked={selectedReservation.statusCheckin}\n//                                 onChange={(e) => setSelectedReservation(prev => ({\n//                                     ...prev,\n//                                     statusCheckin: e.target.checked\n//                                 }))}\n//                             />\n\n//                         </Form.Group>\n//                     </Form>\n//                 )}\n//             </Modal.Body>\n//             <Modal.Footer>\n//                 <Button variant=\"secondary\" onClick={handleClose}>\n//                     Đóng\n//                 </Button>\n//                 <Button variant=\"danger\" onClick={handleDelete}>\n//                     Xóa\n//                 </Button>\n//                 <Button variant=\"primary\" onClick={handleUpdate}>\n//                     Sửa\n//                 </Button>\n//             </Modal.Footer>\n//         </Modal>\n//     );\n// };\n\n// const ManageBookings = () => {\n//     const [reservations, setReservations] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [showModal, setShowModal] = useState(false);\n//     const [selectedReservation, setSelectedReservation] = useState(null);\n\n//     const handleShow = (reservation) => {\n//         setSelectedReservation(reservation);\n//         setShowModal(true);\n//     };\n\n//     const handleClose = () => setShowModal(false);\n\n//     // const handleUpdate = async () => {\n//     //     if (!selectedReservation) return;\n\n//     //     // Tạo một bản sao của đối tượng selectedReservation để sửa đổi\n//     //     const updatedReservation = { ...selectedReservation };\n//     //     console.log('Dữ liệu cập nhật:', updatedReservation);\n\n//     //     try {\n//     //         // Gọi API để cập nhật phiếu đặt phòng với giá trị mới của statusCheckin\n//     //         await authAPI().patch(endpoints['update_reservation'](updatedReservation.id), updatedReservation);\n//     //         // Làm mới danh sách phiếu đặt phòng sau khi cập nhật\n//     //         const response = await authAPI().get(endpoints['list_reservations']);\n\n//     //         console.log(\"Kết quả cập nhật\", response.data)\n//     //         setReservations(response.data);\n//     //     } catch (error) {\n//     //         setError('Failed to update reservation');\n//     //         console.error('Failed to update reservation:', error);\n//     //     } finally {\n//     //         handleClose();\n//     //     }\n//     // };\n//     const handleUpdate = async () => {\n//         if (!selectedReservation) return;\n\n//         // Create a copy of the selectedReservation object for modification\n//         const updatedReservation = { ...selectedReservation };\n//         console.log('Data to update:', updatedReservation);\n\n//         try {\n//             // Log the endpoint being called\n//             const updateEndpoint = endpoints['update_reservation'](updatedReservation.id);\n//             console.log('Update endpoint:', updateEndpoint);\n\n//             // Call API to update the reservation with the new statusCheckin value\n//             await authAPI().patch(updateEndpoint, updatedReservation, {\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 }\n//             });\n\n//             // Refresh the reservation list after update\n//             const response = await authAPI().get(endpoints['list_reservations']);\n//             console.log('Update result:', response.data);\n//             setReservations(response.data);\n//         } catch (error) {\n//             console.error('Failed to update reservation:', error.response ? error.response.data : error.message);\n//             setError('Failed to update reservation');\n//         } finally {\n//             handleClose();\n//         }\n//     };\n\n//     const handleDelete = async () => {\n//         if (!selectedReservation) return;\n\n//         // Hiển thị hộp thoại xác nhận\n//         const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\n\n//         if (confirmed) {\n//             try {\n//                 // Gọi API để vô hiệu hóa phiếu đặt phòng\n//                 await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\n\n//                 // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\n//                 const response = await authAPI().get(endpoints['list_reservations']);\n//                 setReservations(response.data);\n//             } catch (error) {\n//                 setError('Failed to deactivate reservation');\n//             } finally {\n//                 handleClose();\n//             }\n//         }\n//     };\n\n//     useEffect(() => {\n//         const fetchReservations = async () => {\n//           try {\n//             const response = await authAPI().get(endpoints['list_reservations']);\n//             console.log('Reservations fetched:', response.data); // Kiểm tra dữ liệu nhận được\n//             setReservations(response.data);\n//           } catch (err) {\n//             setError('Failed to fetch reservations');\n//             console.error('Failed to fetch reservations:', err);\n//           } finally {\n//             setLoading(false);\n//           }\n//         };\n\n//         fetchReservations();\n//       }, []);\n\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>{error}</p>;\n\n//     return (\n//         <div css={styles}>\n//             <h1>Quản lý Đặt Phòng</h1>\n//             <table css={tableStyles}>\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>Khách</th>\n//                         <th>Phòng</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Nhận phòng</th>\n//                         <th>Trả phòng</th>\n//                         <th>Trạng thái</th>\n//                         <th>Hành động</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {reservations.map(reservation => (\n//                         <tr key={reservation.id}>\n//                             <td>{reservation.id}</td>\n//                             <td>{reservation.guest?.name}</td>\n//                             <td>{reservation.room.map(r => r.nameRoom).join(', ')}</td>\n//                             <td>{reservation.bookDate}</td>\n//                             <td>{reservation.checkin}</td>\n//                             <td>{reservation.checkout}</td>\n//                             <td>{reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'}</td>\n//                             <td>\n//                                 <Button variant=\"primary\" onClick={() => handleShow(reservation)}>Sửa</Button>\n//                                 {/* <Button variant=\"danger\" onClick={() => handleDelete(reservation)}>Xóa</Button> */}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             <ReservationDetailsModal\n//                 showModal={showModal}\n//                 handleClose={handleClose}\n//                 selectedReservation={selectedReservation}\n//                 setSelectedReservation={setSelectedReservation}\n//                 handleUpdate={handleUpdate}\n//                 handleDelete={handleDelete}\n//             />\n//         </div>\n//     );\n// };\n\n// const styles = css`\n//     padding-top: 120px;\n//     background-color: #f4f4f4;\n//     min-height: 100vh;\n\n//     h1 {\n//         color: #0000CD;\n//         text-align: center;\n//         margin-bottom: 20px;\n//     }\n\n//     p {\n//         font-size: 16px;\n//         text-align: center;\n//     }\n// `;\n\n// const tableStyles = css`\n//     width: 100%;\n//     border-collapse: collapse;\n//     margin-top: 20px;\n\n//     th, td {\n//         border: 1px solid #ddd;\n//         padding: 8px;\n//         text-align: left;\n//     }\n\n//     th {\n//         background-color: #0000CD;\n//         color: white;\n//     }\n\n//     tr:nth-of-type(even) {\n//         background-color: #f2f2f2;\n//     }\n\n//     tr:hover {\n//         background-color: #ddd;\n//     }\n\n//     td {\n//         max-width: 150px;\n//         white-space: nowrap;\n//         overflow: hidden;\n//         text-overflow: ellipsis;\n//     }\n// `;\n\n// export default ManageBookings;\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { authAPI, endpoints } from '../../configs/APIs';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst ReservationDetailsModal = ({\n  showModal,\n  handleClose,\n  selectedReservation,\n  setSelectedReservation,\n  handleUpdate,\n  handleDelete\n}) => {\n  var _selectedReservation$, _selectedReservation$2;\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [statusCheckIn, setStatusCheckIn] = useState((selectedReservation === null || selectedReservation === void 0 ? void 0 : selectedReservation.statusCheckIn) || false);\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await authAPI().get('/rooms/');\n        setAvailableRooms(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the rooms!', error);\n      }\n    };\n    fetchRooms();\n    if (selectedReservation) {\n      setStatusCheckIn(selectedReservation.statusCheckIn);\n    }\n  }, [selectedReservation]);\n  const handleStatusChange = event => {\n    setStatusCheckIn(event.target.checked);\n  };\n  const handleUpdateWithStatus = () => {\n    if (selectedReservation) {\n      setSelectedReservation({\n        ...selectedReservation,\n        statusCheckIn: statusCheckIn\n      });\n      handleUpdate(); // Gọi hàm cập nhật để gửi thay đổi\n    }\n  };\n  return jsx(Modal, {\n    show: showModal,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }\n  }, jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }, jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, \"Chi ti\\u1EBFt \\u0110\\u1EB7t Ph\\xF2ng\")), jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, selectedReservation && jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 21\n    }\n  }, jsx(Form.Group, {\n    controlId: \"formReservationId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 29\n    }\n  }, \"ID\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.id,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formGuest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 29\n    }\n  }, \"Kh\\xE1ch\"), jsx(Form.Control, {\n    type: \"text\",\n    value: (_selectedReservation$ = selectedReservation.guest) === null || _selectedReservation$ === void 0 ? void 0 : _selectedReservation$.username,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formRoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 29\n    }\n  }, \"Ph\\xF2ng\"), jsx(Form.Select, {\n    value: ((_selectedReservation$2 = selectedReservation.room[0]) === null || _selectedReservation$2 === void 0 ? void 0 : _selectedReservation$2.nameRoom) || '',\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      room: availableRooms.filter(room => room.nameRoom === e.target.value)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 29\n    }\n  }, jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 33\n    }\n  }, \"Ch\\u1ECDn ph\\xF2ng\"), availableRooms.map(room => jsx(\"option\", {\n    key: room.id,\n    value: room.nameRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 37\n    }\n  }, room.nameRoom)))), jsx(Form.Group, {\n    controlId: \"formBookDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 29\n    }\n  }, \"Ng\\xE0y \\u0111\\u1EB7t\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.bookDate,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      bookDate: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formCheckin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, \"Nh\\u1EADn ph\\xF2ng\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.checkin,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      checkin: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formCheckout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 29\n    }\n  }, \"Tr\\u1EA3 ph\\xF2ng\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.checkout,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      checkout: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formActive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 29\n    }\n  }, \"Tr\\u1EA1ng th\\xE1i \\u0111\\u1EB7t\"), jsx(Form.Check, {\n    type: \"checkbox\",\n    checked: selectedReservation.statusCheckin,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      statusCheckin: e.target.checked\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 29\n    }\n  })))), jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\xF3ng\"), jsx(Button, {\n    variant: \"danger\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  }, \"X\\xF3a\"), jsx(Button, {\n    variant: \"primary\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 17\n    }\n  }, \"S\\u1EEDa\")));\n};\nconst ManageBookings = () => {\n  const [reservations, setReservations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const handleShow = reservation => {\n    setSelectedReservation(reservation);\n    setShowModal(true);\n  };\n  const handleClose = () => setShowModal(false);\n  const handleUpdate = async () => {\n    if (!selectedReservation) return;\n    const updatedReservation = {\n      statusCheckIn: selectedReservation.statusCheckIn // Cập nhật trạng thái check-in\n    };\n    try {\n      console.log('Cập nhật:', updatedReservation);\n      const response = await authAPI().post(endpoints['check_in_status'](selectedReservation.id), updatedReservation);\n      console.log('Cập nhật thành công:', response.data);\n\n      // Làm mới danh sách đặt phòng\n      const response2 = await authAPI().get(endpoints['list_reservations']);\n      setReservations(response2.data);\n    } catch (error) {\n      var _error$response;\n      console.error('Lỗi cập nhật:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      if (error.response && error.response.data) {\n        console.log('Chi tiết lỗi từ API:', error.response.data);\n      }\n    } finally {\n      handleClose();\n    }\n  };\n  const handleDelete = async () => {\n    if (!selectedReservation) return;\n\n    // Hiển thị hộp thoại xác nhận\n    const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\n    if (confirmed) {\n      try {\n        // Gọi API để vô hiệu hóa phiếu đặt phòng\n        await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\n\n        // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\n        const response = await authAPI().get(endpoints['list_reservations']);\n        setReservations(response.data);\n      } catch (error) {\n        setError('Failed to deactivate reservation');\n      } finally {\n        handleClose();\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchReservations = async () => {\n      try {\n        const response = await authAPI().get(endpoints['list_reservations']);\n        setReservations(response.data);\n      } catch (err) {\n        setError('Failed to fetch reservations');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReservations();\n  }, []);\n  if (loading) return jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 23\n    }\n  }, error);\n  return jsx(\"div\", {\n    css: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 9\n    }\n  }, jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }\n  }, \"L\\u1EC5 t\\xE2n nh\\u1EADn ph\\xF2ng\"), jsx(\"table\", {\n    css: tableStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }\n  }, jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 17\n    }\n  }, jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 21\n    }\n  }, jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 25\n    }\n  }, \"ID\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 25\n    }\n  }, \"Kh\\xE1ch\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 25\n    }\n  }, \"Ph\\xF2ng\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 25\n    }\n  }, \"Ng\\xE0y \\u0111\\u1EB7t\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 25\n    }\n  }, \"Nh\\u1EADn ph\\xF2ng\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 25\n    }\n  }, \"Tr\\u1EA3 ph\\xF2ng\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 25\n    }\n  }, \"Tr\\u1EA1ng th\\xE1i\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 25\n    }\n  }, \"H\\xE0nh \\u0111\\u1ED9ng\"))), jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 17\n    }\n  }, reservations.map(reservation => {\n    var _reservation$guest;\n    return jsx(\"tr\", {\n      key: reservation.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 25\n      }\n    }, jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 29\n      }\n    }, reservation.id), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 29\n      }\n    }, (_reservation$guest = reservation.guest) === null || _reservation$guest === void 0 ? void 0 : _reservation$guest.username), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 29\n      }\n    }, reservation.room.map(r => r.nameRoom).join(', ')), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 29\n      }\n    }, reservation.bookDate), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 29\n      }\n    }, reservation.checkin), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 29\n      }\n    }, reservation.checkout), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 29\n      }\n    }, reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 29\n      }\n    }, jsx(Button, {\n      variant: \"primary\",\n      onClick: () => handleShow(reservation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 33\n      }\n    }, \"S\\u1EEDa\")));\n  }))), jsx(ReservationDetailsModal, {\n    showModal: showModal,\n    handleClose: handleClose,\n    selectedReservation: selectedReservation,\n    setSelectedReservation: setSelectedReservation,\n    handleUpdate: handleUpdate,\n    handleDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 13\n    }\n  }));\n};\nconst styles = css`\n    padding-top: 120px;\n    background-color: #f4f4f4;\n    min-height: 100vh;\n\n    h1 {\n        color: #0000CD;\n        text-align: center;\n        margin-bottom: 20px;\n    }\n\n    p {\n        font-size: 16px;\n        text-align: center;\n    }\n`;\nconst tableStyles = css`\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #0000CD;\n        color: white;\n    }\n\n    tr:nth-of-type(even) {\n        background-color: #f2f2f2;\n    }\n\n    tr:hover {\n        background-color: #ddd;\n    }\n\n    td {\n        max-width: 150px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n`;\nexport default ManageBookings;","map":{"version":3,"names":["css","jsx","useEffect","useState","authAPI","endpoints","Modal","Button","Form","ReservationDetailsModal","showModal","handleClose","selectedReservation","setSelectedReservation","handleUpdate","handleDelete","_selectedReservation$","_selectedReservation$2","availableRooms","setAvailableRooms","statusCheckIn","setStatusCheckIn","fetchRooms","response","get","data","error","console","handleStatusChange","event","target","checked","handleUpdateWithStatus","show","onHide","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","value","id","readOnly","guest","username","Select","room","nameRoom","onChange","e","prev","filter","map","key","bookDate","checkin","checkout","Check","statusCheckin","Footer","variant","onClick","ManageBookings","reservations","setReservations","loading","setLoading","setError","setShowModal","handleShow","reservation","updatedReservation","log","post","response2","_error$response","message","confirmed","window","confirm","patch","fetchReservations","err","styles","tableStyles","_reservation$guest","r","join"],"sources":["D:/WebsiteQLKS_Django_React/react-website/src/components/Staff/ManageBookings.js"],"sourcesContent":["// /** @jsx jsx */\r\n// import { css, jsx } from '@emotion/react';\r\n// import { useEffect, useState } from 'react';\r\n// import { authAPI, endpoints } from '../../configs/APIs';\r\n// import { Modal, Button, Form } from 'react-bootstrap';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const ReservationDetailsModal = ({ showModal, handleClose, selectedReservation, setSelectedReservation, handleUpdate, handleDelete }) => {\r\n//     const [availableRooms, setAvailableRooms] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const fetchRooms = async () => {\r\n//             try {\r\n//                 const response = await authAPI().get('http://192.168.1.113:8000/rooms/');\r\n//                 setAvailableRooms(response.data);\r\n//             } catch (error) {\r\n//                 console.error('There was an error fetching the rooms!', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchRooms();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <Modal show={showModal} onHide={handleClose}>\r\n//             <Modal.Header closeButton>\r\n//                 <Modal.Title>Chi tiết Đặt Phòng</Modal.Title>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//                 {selectedReservation && (\r\n//                     <Form>\r\n//                         <Form.Group controlId=\"formReservationId\">\r\n//                             <Form.Label>ID</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"text\"\r\n//                                 value={selectedReservation.id}\r\n//                                 readOnly\r\n//                             />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"formGuest\">\r\n//                             <Form.Label>Khách</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"text\"\r\n//                                 value={selectedReservation.guest}\r\n//                                 readOnly\r\n//                             />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"formRoom\">\r\n//                             <Form.Label>Phòng</Form.Label>\r\n//                             <Form.Select\r\n//                                 value={selectedReservation.room[0]?.nameRoom || ''}\r\n//                                 onChange={(e) => setSelectedReservation(prev => ({\r\n//                                     ...prev,\r\n//                                     room: availableRooms.filter(room => room.nameRoom === e.target.value)\r\n//                                 }))}\r\n//                             >\r\n//                                 <option value=\"\">Chọn phòng</option>\r\n//                                 {availableRooms.map(room => (\r\n//                                     <option key={room.id} value={room.nameRoom}>\r\n//                                         {room.nameRoom}\r\n//                                     </option>\r\n//                                 ))}\r\n//                             </Form.Select>\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"formBookDate\">\r\n//                             <Form.Label>Ngày đặt</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"text\"\r\n//                                 value={selectedReservation.bookDate}\r\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, bookDate: e.target.value }))}\r\n//                             />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"formCheckin\">\r\n//                             <Form.Label>Nhận phòng</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"text\"\r\n//                                 value={selectedReservation.checkin}\r\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkin: e.target.value }))}\r\n//                             />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"formCheckout\">\r\n//                             <Form.Label>Trả phòng</Form.Label>\r\n//                             <Form.Control\r\n//                                 type=\"text\"\r\n//                                 value={selectedReservation.checkout}\r\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkout: e.target.value }))}\r\n//                             />\r\n//                         </Form.Group>\r\n//                         <Form.Group controlId=\"formActive\">\r\n//                             <Form.Label>Trạng thái đặt</Form.Label>\r\n//                             <Form.Check\r\n//                                 type=\"checkbox\"\r\n//                                 checked={selectedReservation.statusCheckin}\r\n//                                 onChange={(e) => setSelectedReservation(prev => ({\r\n//                                     ...prev,\r\n//                                     statusCheckin: e.target.checked\r\n//                                 }))}\r\n//                             />\r\n\r\n//                         </Form.Group>\r\n//                     </Form>\r\n//                 )}\r\n//             </Modal.Body>\r\n//             <Modal.Footer>\r\n//                 <Button variant=\"secondary\" onClick={handleClose}>\r\n//                     Đóng\r\n//                 </Button>\r\n//                 <Button variant=\"danger\" onClick={handleDelete}>\r\n//                     Xóa\r\n//                 </Button>\r\n//                 <Button variant=\"primary\" onClick={handleUpdate}>\r\n//                     Sửa\r\n//                 </Button>\r\n//             </Modal.Footer>\r\n//         </Modal>\r\n//     );\r\n// };\r\n\r\n// const ManageBookings = () => {\r\n//     const [reservations, setReservations] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     const [showModal, setShowModal] = useState(false);\r\n//     const [selectedReservation, setSelectedReservation] = useState(null);\r\n\r\n//     const handleShow = (reservation) => {\r\n//         setSelectedReservation(reservation);\r\n//         setShowModal(true);\r\n//     };\r\n\r\n//     const handleClose = () => setShowModal(false);\r\n\r\n//     // const handleUpdate = async () => {\r\n//     //     if (!selectedReservation) return;\r\n\r\n//     //     // Tạo một bản sao của đối tượng selectedReservation để sửa đổi\r\n//     //     const updatedReservation = { ...selectedReservation };\r\n//     //     console.log('Dữ liệu cập nhật:', updatedReservation);\r\n\r\n//     //     try {\r\n//     //         // Gọi API để cập nhật phiếu đặt phòng với giá trị mới của statusCheckin\r\n//     //         await authAPI().patch(endpoints['update_reservation'](updatedReservation.id), updatedReservation);\r\n//     //         // Làm mới danh sách phiếu đặt phòng sau khi cập nhật\r\n//     //         const response = await authAPI().get(endpoints['list_reservations']);\r\n\r\n//     //         console.log(\"Kết quả cập nhật\", response.data)\r\n//     //         setReservations(response.data);\r\n//     //     } catch (error) {\r\n//     //         setError('Failed to update reservation');\r\n//     //         console.error('Failed to update reservation:', error);\r\n//     //     } finally {\r\n//     //         handleClose();\r\n//     //     }\r\n//     // };\r\n//     const handleUpdate = async () => {\r\n//         if (!selectedReservation) return;\r\n    \r\n//         // Create a copy of the selectedReservation object for modification\r\n//         const updatedReservation = { ...selectedReservation };\r\n//         console.log('Data to update:', updatedReservation);\r\n    \r\n//         try {\r\n//             // Log the endpoint being called\r\n//             const updateEndpoint = endpoints['update_reservation'](updatedReservation.id);\r\n//             console.log('Update endpoint:', updateEndpoint);\r\n    \r\n//             // Call API to update the reservation with the new statusCheckin value\r\n//             await authAPI().patch(updateEndpoint, updatedReservation, {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 }\r\n//             });\r\n    \r\n//             // Refresh the reservation list after update\r\n//             const response = await authAPI().get(endpoints['list_reservations']);\r\n//             console.log('Update result:', response.data);\r\n//             setReservations(response.data);\r\n//         } catch (error) {\r\n//             console.error('Failed to update reservation:', error.response ? error.response.data : error.message);\r\n//             setError('Failed to update reservation');\r\n//         } finally {\r\n//             handleClose();\r\n//         }\r\n//     };\r\n    \r\n\r\n\r\n//     const handleDelete = async () => {\r\n//         if (!selectedReservation) return;\r\n    \r\n//         // Hiển thị hộp thoại xác nhận\r\n//         const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\r\n    \r\n//         if (confirmed) {\r\n//             try {\r\n//                 // Gọi API để vô hiệu hóa phiếu đặt phòng\r\n//                 await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\r\n    \r\n//                 // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\r\n//                 const response = await authAPI().get(endpoints['list_reservations']);\r\n//                 setReservations(response.data);\r\n//             } catch (error) {\r\n//                 setError('Failed to deactivate reservation');\r\n//             } finally {\r\n//                 handleClose();\r\n//             }\r\n//         }\r\n//     };\r\n    \r\n\r\n\r\n//     useEffect(() => {\r\n//         const fetchReservations = async () => {\r\n//           try {\r\n//             const response = await authAPI().get(endpoints['list_reservations']);\r\n//             console.log('Reservations fetched:', response.data); // Kiểm tra dữ liệu nhận được\r\n//             setReservations(response.data);\r\n//           } catch (err) {\r\n//             setError('Failed to fetch reservations');\r\n//             console.error('Failed to fetch reservations:', err);\r\n//           } finally {\r\n//             setLoading(false);\r\n//           }\r\n//         };\r\n      \r\n//         fetchReservations();\r\n//       }, []);\r\n\r\n//     if (loading) return <p>Loading...</p>;\r\n//     if (error) return <p>{error}</p>;\r\n\r\n//     return (\r\n//         <div css={styles}>\r\n//             <h1>Quản lý Đặt Phòng</h1>\r\n//             <table css={tableStyles}>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>ID</th>\r\n//                         <th>Khách</th>\r\n//                         <th>Phòng</th>\r\n//                         <th>Ngày đặt</th>\r\n//                         <th>Nhận phòng</th>\r\n//                         <th>Trả phòng</th>\r\n//                         <th>Trạng thái</th>\r\n//                         <th>Hành động</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {reservations.map(reservation => (\r\n//                         <tr key={reservation.id}>\r\n//                             <td>{reservation.id}</td>\r\n//                             <td>{reservation.guest?.name}</td>\r\n//                             <td>{reservation.room.map(r => r.nameRoom).join(', ')}</td>\r\n//                             <td>{reservation.bookDate}</td>\r\n//                             <td>{reservation.checkin}</td>\r\n//                             <td>{reservation.checkout}</td>\r\n//                             <td>{reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'}</td>\r\n//                             <td>\r\n//                                 <Button variant=\"primary\" onClick={() => handleShow(reservation)}>Sửa</Button>\r\n//                                 {/* <Button variant=\"danger\" onClick={() => handleDelete(reservation)}>Xóa</Button> */}\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//             <ReservationDetailsModal\r\n//                 showModal={showModal}\r\n//                 handleClose={handleClose}\r\n//                 selectedReservation={selectedReservation}\r\n//                 setSelectedReservation={setSelectedReservation}\r\n//                 handleUpdate={handleUpdate}\r\n//                 handleDelete={handleDelete}\r\n//             />\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// const styles = css`\r\n//     padding-top: 120px;\r\n//     background-color: #f4f4f4;\r\n//     min-height: 100vh;\r\n\r\n//     h1 {\r\n//         color: #0000CD;\r\n//         text-align: center;\r\n//         margin-bottom: 20px;\r\n//     }\r\n\r\n//     p {\r\n//         font-size: 16px;\r\n//         text-align: center;\r\n//     }\r\n// `;\r\n\r\n// const tableStyles = css`\r\n//     width: 100%;\r\n//     border-collapse: collapse;\r\n//     margin-top: 20px;\r\n\r\n//     th, td {\r\n//         border: 1px solid #ddd;\r\n//         padding: 8px;\r\n//         text-align: left;\r\n//     }\r\n\r\n//     th {\r\n//         background-color: #0000CD;\r\n//         color: white;\r\n//     }\r\n\r\n//     tr:nth-of-type(even) {\r\n//         background-color: #f2f2f2;\r\n//     }\r\n\r\n//     tr:hover {\r\n//         background-color: #ddd;\r\n//     }\r\n\r\n//     td {\r\n//         max-width: 150px;\r\n//         white-space: nowrap;\r\n//         overflow: hidden;\r\n//         text-overflow: ellipsis;\r\n//     }\r\n// `;\r\n\r\n// export default ManageBookings;\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/react';\r\nimport { useEffect, useState } from 'react';\r\nimport { authAPI, endpoints } from '../../configs/APIs';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ReservationDetailsModal = ({ showModal, handleClose, selectedReservation, setSelectedReservation, handleUpdate, handleDelete }) => {\r\n    const [availableRooms, setAvailableRooms] = useState([]);\r\n    const [statusCheckIn, setStatusCheckIn] = useState(selectedReservation?.statusCheckIn || false);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchRooms = async () => {\r\n            try {\r\n                const response = await authAPI().get('/rooms/');\r\n                setAvailableRooms(response.data);\r\n            } catch (error) {\r\n                console.error('There was an error fetching the rooms!', error);\r\n            }\r\n        };\r\n\r\n        fetchRooms();\r\n\r\n        if (selectedReservation) {\r\n            setStatusCheckIn(selectedReservation.statusCheckIn);\r\n        }\r\n    }, [selectedReservation]);\r\n\r\n    const handleStatusChange = (event) => {\r\n        setStatusCheckIn(event.target.checked);\r\n    };\r\n\r\n    const handleUpdateWithStatus = () => {\r\n        if (selectedReservation) {\r\n            setSelectedReservation({\r\n                ...selectedReservation,\r\n                statusCheckIn: statusCheckIn\r\n            });\r\n            handleUpdate(); // Gọi hàm cập nhật để gửi thay đổi\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal show={showModal} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Chi tiết Đặt Phòng</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {selectedReservation && (\r\n                    <Form>\r\n                        <Form.Group controlId=\"formReservationId\">\r\n                            <Form.Label>ID</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={selectedReservation.id}\r\n                                readOnly\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGuest\">\r\n                            <Form.Label>Khách</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={selectedReservation.guest?.username}\r\n                                readOnly\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formRoom\">\r\n                            <Form.Label>Phòng</Form.Label>\r\n                            <Form.Select\r\n                                value={selectedReservation.room[0]?.nameRoom || ''}\r\n                                onChange={(e) => setSelectedReservation(prev => ({\r\n                                    ...prev,\r\n                                    room: availableRooms.filter(room => room.nameRoom === e.target.value)\r\n                                }))}\r\n                            >\r\n                                <option value=\"\">Chọn phòng</option>\r\n                                {availableRooms.map(room => (\r\n                                    <option key={room.id} value={room.nameRoom}>\r\n                                        {room.nameRoom}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBookDate\">\r\n                            <Form.Label>Ngày đặt</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={selectedReservation.bookDate}\r\n                                onChange={(e) => setSelectedReservation(prev => ({ ...prev, bookDate: e.target.value }))}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formCheckin\">\r\n                            <Form.Label>Nhận phòng</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={selectedReservation.checkin}\r\n                                onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkin: e.target.value }))}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formCheckout\">\r\n                            <Form.Label>Trả phòng</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={selectedReservation.checkout}\r\n                                onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkout: e.target.value }))}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formActive\">\r\n                            <Form.Label>Trạng thái đặt</Form.Label>\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                checked={selectedReservation.statusCheckin}\r\n                                onChange={(e) => setSelectedReservation(prev => ({\r\n                                    ...prev,\r\n                                    statusCheckin: e.target.checked\r\n                                }))}\r\n                            />\r\n\r\n                        </Form.Group>\r\n                        \r\n                    </Form>\r\n                )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Đóng\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Xóa\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleUpdate}>\r\n                    Sửa\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nconst ManageBookings = () => {\r\n    const [reservations, setReservations] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedReservation, setSelectedReservation] = useState(null);\r\n\r\n    const handleShow = (reservation) => {\r\n        setSelectedReservation(reservation);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleClose = () => setShowModal(false);\r\n\r\n    const handleUpdate = async () => {\r\n        if (!selectedReservation) return;\r\n    \r\n        const updatedReservation = {\r\n            statusCheckIn: selectedReservation.statusCheckIn, // Cập nhật trạng thái check-in\r\n        };\r\n    \r\n        try {\r\n            console.log('Cập nhật:', updatedReservation);\r\n            const response = await authAPI().post(\r\n                endpoints['check_in_status'](selectedReservation.id),\r\n                updatedReservation\r\n            );\r\n            console.log('Cập nhật thành công:', response.data);\r\n    \r\n            // Làm mới danh sách đặt phòng\r\n            const response2 = await authAPI().get(endpoints['list_reservations']);\r\n            setReservations(response2.data);\r\n        } catch (error) {\r\n            console.error('Lỗi cập nhật:', error.response?.data || error.message);\r\n            if (error.response && error.response.data) {\r\n                console.log('Chi tiết lỗi từ API:', error.response.data);\r\n            }\r\n        } finally {\r\n            handleClose();\r\n        }\r\n    };\r\n    \r\n\r\n    const handleDelete = async () => {\r\n        if (!selectedReservation) return;\r\n    \r\n        // Hiển thị hộp thoại xác nhận\r\n        const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\r\n    \r\n        if (confirmed) {\r\n            try {\r\n                // Gọi API để vô hiệu hóa phiếu đặt phòng\r\n                await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\r\n    \r\n                // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\r\n                const response = await authAPI().get(endpoints['list_reservations']);\r\n                setReservations(response.data);\r\n            } catch (error) {\r\n                setError('Failed to deactivate reservation');\r\n            } finally {\r\n                handleClose();\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchReservations = async () => {\r\n            try {\r\n                const response = await authAPI().get(endpoints['list_reservations']);\r\n                setReservations(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch reservations');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchReservations();\r\n\r\n    }, []);\r\n\r\n   \r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>{error}</p>;\r\n\r\n    return (\r\n        <div css={styles}>\r\n            <h1>Lễ tân nhận phòng</h1>\r\n            <table css={tableStyles}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Khách</th>\r\n                        <th>Phòng</th>\r\n                        <th>Ngày đặt</th>\r\n                        <th>Nhận phòng</th>\r\n                        <th>Trả phòng</th>\r\n                        <th>Trạng thái</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {reservations.map(reservation => (\r\n                        <tr key={reservation.id}>\r\n                            <td>{reservation.id}</td>\r\n                            <td>{reservation.guest?.username}</td>\r\n                            <td>{reservation.room.map(r => r.nameRoom).join(', ')}</td>\r\n                            <td>{reservation.bookDate}</td>\r\n                            <td>{reservation.checkin}</td>\r\n                            <td>{reservation.checkout}</td>\r\n                            <td>{reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'}</td>\r\n                            <td>\r\n                                <Button variant=\"primary\" onClick={() => handleShow(reservation)}>Sửa</Button>\r\n                                {/* <Button variant=\"danger\" onClick={() => handleDelete(reservation)}>Xóa</Button> */}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <ReservationDetailsModal\r\n                showModal={showModal}\r\n                handleClose={handleClose}\r\n                selectedReservation={selectedReservation}\r\n                setSelectedReservation={setSelectedReservation}\r\n                handleUpdate={handleUpdate}\r\n                handleDelete={handleDelete}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = css`\r\n    padding-top: 120px;\r\n    background-color: #f4f4f4;\r\n    min-height: 100vh;\r\n\r\n    h1 {\r\n        color: #0000CD;\r\n        text-align: center;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    p {\r\n        font-size: 16px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst tableStyles = css`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n\r\n    th, td {\r\n        border: 1px solid #ddd;\r\n        padding: 8px;\r\n        text-align: left;\r\n    }\r\n\r\n    th {\r\n        background-color: #0000CD;\r\n        color: white;\r\n    }\r\n\r\n    tr:nth-of-type(even) {\r\n        background-color: #f2f2f2;\r\n    }\r\n\r\n    tr:hover {\r\n        background-color: #ddd;\r\n    }\r\n\r\n    td {\r\n        max-width: 150px;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    }\r\n`;\r\n\r\nexport default ManageBookings;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module"}