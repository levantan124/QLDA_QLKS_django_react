{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebsiteQLKS_Django_React\\\\react-website\\\\src\\\\components\\\\Staff\\\\AddService.js\";\n// /** @jsx jsx */\n// import { css, jsx } from '@emotion/react';\n// import { useState, useEffect } from 'react';\n// import Container from '../Global/Container';\n// import { authAPI, endpoints } from '../../configs/APIs';\n// import { SnackbarProvider, useSnackbar } from 'notistack';\n// import { Card, CardBody, CardTitle, CardText, Row, Col } from 'reactstrap';\n\n// const AddService = () => {\n//     const [nameService, setNameService] = useState('');\n//     const [price, setPrice] = useState(0);\n//     const [quantity, setQuantity] = useState(1);\n//     const [reservations, setReservations] = useState([]);\n//     const [services, setServices] = useState([]);\n//     const [selectedReservation, setSelectedReservation] = useState('');\n//     const [selectedService, setSelectedService] = useState('');\n//     const [error, setError] = useState('');\n//     const [loadingReservations, setLoadingReservations] = useState(true);\n//     const [loadingServices, setLoadingServices] = useState(true);\n//     const [serviceList, setServiceList] = useState([]);\n\n//     const { enqueueSnackbar } = useSnackbar();\n\n//     useEffect(() => {\n//         const fetchReservations = async () => {\n//             try {\n//                 const response = await authAPI().get(endpoints['reservations']);\n//                 setReservations(response.data);\n//             } catch (err) {\n//                 setError('Failed to fetch reservations');\n//             } finally {\n//                 setLoadingReservations(false);\n//             }\n//         };\n\n//         fetchReservations();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchServices = async () => {\n//             try {\n//                 const response = await authAPI().get(endpoints['services']);\n//                 setServices(response.data);\n//             } catch (err) {\n//                 setError('Failed to fetch services');\n//             } finally {\n//                 setLoadingServices(false);\n//             }\n//         };\n\n//         fetchServices();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchServiceList = async () => {\n//             try {\n//                 const response = await authAPI().get(endpoints['reservation_service']);\n//                 setServiceList(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching service list:', error);\n//             }\n//         };\n\n//         fetchServiceList();\n//     }, []);\n\n//     const handleServiceChange = (e) => {\n//         const selectedServiceId = e.target.value;\n//         const selectedService = services.find(service => service.id === parseInt(selectedServiceId));\n//         setSelectedService(selectedServiceId);\n//         if (selectedService) {\n//             setNameService(selectedService.nameService);\n//             setPrice(selectedService.price);\n//         }\n//     };\n\n//     const handleQuantityChange = (e) => {\n//         const newQuantity = parseInt(e.target.value);\n//         if (newQuantity > 0) {\n//             setQuantity(newQuantity);\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (!selectedReservation || !selectedService) {\n//             enqueueSnackbar('Vui lòng chọn phiếu đặt phòng và dịch vụ', { variant: 'warning' });\n//             return;\n//         }\n\n//         const serviceData = {\n//             reservation: selectedReservation,\n//             service: selectedService,\n//             quantity,\n//         };\n\n//         try {\n//             const response = await authAPI().post(endpoints['reservation_service'], serviceData);\n//             if (response.status === 201) {\n//                 enqueueSnackbar('Dịch vụ đã được thêm thành công', { variant: 'success' });\n//                 setNameService('');\n//                 setPrice(0);\n//                 setQuantity(1);\n//                 setSelectedReservation('');\n//                 setSelectedService('');\n\n//                 // Refresh service list after adding a new service\n//                 const updatedServiceList = await authAPI().get(endpoints['reservation_service']);\n//                 setServiceList(updatedServiceList.data);\n//             } else {\n//                 enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\n//             }\n//         } catch (error) {\n//             console.error('Error adding service:', error);\n//             enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\n//         }\n//     };\n\n//     const formatCurrency = (amount) => {\n//         return new Intl.NumberFormat('vi-VN', {\n//             style: 'currency',\n//             currency: 'VND'\n//         }).format(amount);\n//     };\n\n//     const groupedServices = serviceList.reduce((acc, service) => {\n//         const key = `${service.guest_name} - Phòng: ${service.room_names}`;\n//         if (!acc[key]) {\n//             acc[key] = [];\n//         }\n//         acc[key].push(service);\n//         return acc;\n//     }, {});\n\n//     return (\n//         <Container>\n//             <div css={styles}>\n//                 <h1>Thêm dịch vụ</h1>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label>Tên dịch vụ</label>\n//                         {loadingServices ? (\n//                             <p>Loading services...</p>\n//                         ) : (\n//                             <select\n//                                 value={selectedService}\n//                                 onChange={handleServiceChange}\n//                                 required\n//                             >\n//                                 <option value=\"\">Chọn dịch vụ</option>\n//                                 {services.map((service) => (\n//                                     <option key={service.id} value={service.id}>\n//                                         {service.nameService} - Giá: {formatCurrency(service.price)}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         )}\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label>Số lượng</label>\n//                         <input\n//                             type=\"number\"\n//                             value={quantity}\n//                             onChange={handleQuantityChange}\n//                             required\n//                             min=\"1\"\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label>Tổng phí dịch vụ</label>\n//                         <input\n//                             type=\"text\"\n//                             value={formatCurrency(price * quantity)}\n//                             readOnly\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label>Chọn phiếu đặt phòng</label>\n//                         {loadingReservations ? (\n//                             <p>Loading reservations...</p>\n//                         ) : (\n//                             <select\n//                                 value={selectedReservation}\n//                                 onChange={(e) => setSelectedReservation(e.target.value)}\n//                                 required\n//                             >\n//                                 <option value=\"\">Chọn phiếu</option>\n//                                 {reservations.map((reservation) => (\n//                                     <option key={reservation.id} value={reservation.id}>\n//                                         {reservation.guest.name} - {reservation.room.map(r => r.nameRoom).join(', ')}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         )}\n//                     </div>\n//                     <button type=\"submit\">Thêm dịch vụ</button>\n//                 </form>\n//                 <div css={listStyles}>\n//                     <h1>Danh sách phiếu đặt phòng</h1>\n//                     {Object.entries(groupedServices).map(([key, services]) => (\n//                         <div key={key} css={groupStyle}>\n//                             <h2 css={groupTitleStyle}>{key}</h2>\n//                             <Row>\n//                                 {services.map((service, index) => (\n//                                     <Col key={index} sm=\"12\" md=\"6\" lg=\"4\">\n//                                         <Card css={cardStyle}>\n//                                             <CardBody>\n//                                                 <CardTitle tag=\"h5\" css={cardTitleStyle}>{service.service_name}</CardTitle>\n//                                                 <CardText css={cardTextStyle}>\n//                                                     Dịch vụ: {service.nameService} <br />\n//                                                     Giá: {service.price.toLocaleString()} VND<br />\n//                                                     Số lượng: {service.quantity}\n//                                                 </CardText>\n//                                             </CardBody>\n//                                         </Card>\n//                                     </Col>\n//                                 ))}\n//                             </Row>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//         </Container>\n//     );\n// };\n\n// const styles = css`\n//     padding: 120px;\n//     background-color: #f9f9f9;\n//     h1 {\n//         margin-bottom: 20px;\n//     }\n//     .form-group {\n//         margin-bottom: 15px;\n//         label {\n//             display: block;\n//             margin-bottom: 5px;\n//         }\n//         input, select {\n//             width: 100%;\n//             padding: 8px;\n//             box-sizing: border-box;\n//         }\n//     }\n//     button {\n//         padding: 10px 20px;\n//         background-color: #0000cd;\n//         color: #fff;\n//         border: none;\n//         cursor: pointer;\n//         &:hover {\n//             background-color: #00008b;\n//         }\n//     }\n//     p {\n//         margin-top: 15px;\n//         color: #ff1414;\n//     }\n// `;\n\n// const listStyles = css`\n//     padding: 20px;\n//     background-color: #f9f9f9;\n//     h1 {\n//         margin-bottom: 20px;\n//         text-align: center;\n//     }\n// `;\n\n// const groupStyle = css`\n//     margin-bottom: 20px;\n//     padding: 10px;\n//     background-color: #fff;\n//     border-radius: 8px;\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n// `;\n\n// const groupTitleStyle = css`\n//     font-size: 1.25rem;\n//     color: #343a40;\n//     margin-bottom: 10px;\n// `;\n\n// const cardStyle = css`\n//     margin-bottom: 10px;\n//     border: 1px solid #ddd;\n//     border-radius: 8px;\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n//     transition: transform 0.3s ease;\n//     &:hover {\n//         transform: scale(1.05);\n//     }\n// `;\n\n// const cardTitleStyle = css`\n//     font-size: 1rem;\n//     color: #007bff;\n// `;\n\n// const cardTextStyle = css`\n//     font-size: 0.875rem;\n//     color: #343a40;\n// `;\n\n// export default AddService;\n\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { useState, useEffect } from 'react';\nimport Container from '../Global/Container';\nimport { authAPI, endpoints } from '../../configs/APIs';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\nimport { Card, CardBody, CardTitle, CardText, Row, Col } from 'reactstrap';\nconst AddService = () => {\n  const [nameService, setNameService] = useState('');\n  const [price, setPrice] = useState(0);\n  const [quantity, setQuantity] = useState(1);\n  const [reservations, setReservations] = useState([]);\n  const [services, setServices] = useState([]);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const [selectedService, setSelectedService] = useState('');\n  const [error, setError] = useState('');\n  const [loadingReservations, setLoadingReservations] = useState(true);\n  const [loadingServices, setLoadingServices] = useState(true);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    const fetchReservations = async () => {\n      try {\n        const response = await authAPI().get(endpoints['list_reservations']);\n        setReservations(response.data);\n      } catch (err) {\n        setError('Failed to fetch reservations');\n      } finally {\n        setLoadingReservations(false);\n      }\n    };\n    fetchReservations();\n  }, []);\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await authAPI().get(endpoints['services']);\n        // console.log(response.data)\n        setServices(response.data);\n      } catch (err) {\n        setError('Failed to fetch services');\n      } finally {\n        setLoadingServices(false);\n      }\n    };\n    fetchServices();\n  }, []);\n  const handleServiceChange = e => {\n    const selectedServiceId = e.target.value;\n    const selectedService = services.find(service => service.id === parseInt(selectedServiceId));\n    setSelectedService(selectedServiceId);\n    setNameService(selectedService.nameService);\n    setPrice(selectedService.price);\n  };\n  const handleQuantityChange = e => {\n    const newQuantity = e.target.value;\n    setQuantity(newQuantity);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const serviceData = {\n      reservationId: selectedReservation,\n      service: selectedService,\n      quantity\n    };\n    try {\n      const response = await authAPI().post(endpoints['reservation_service'], serviceData);\n      if (response.status === 201) {\n        enqueueSnackbar('Dịch vụ đã được thêm thành công', {\n          variant: 'success'\n        });\n        setNameService('');\n        setPrice(0);\n        setQuantity(1);\n        setSelectedReservation(null);\n        setSelectedService('');\n      } else {\n        enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', {\n          variant: 'error'\n        });\n      }\n    } catch (error) {\n      console.error('Error adding service:', error);\n      enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', {\n        variant: 'error'\n      });\n    }\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('vi-VN', {\n      style: 'currency',\n      currency: 'VND'\n    }).format(amount);\n  };\n  return jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, jsx(\"div\", {\n    css: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 17\n    }\n  }, \"Th\\xEAm d\\u1ECBch v\\u1EE5\"), jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 17\n    }\n  }, jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, \"T\\xEAn d\\u1ECBch v\\u1EE5\"), loadingServices ? jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, \"Loading services...\") : jsx(\"select\", {\n    value: selectedService,\n    onChange: handleServiceChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }, jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 33\n    }\n  }, \"Ch\\u1ECDn d\\u1ECBch v\\u1EE5\"), services.map(service => jsx(\"option\", {\n    key: service.id,\n    value: service.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 37\n    }\n  }, service.nameService, \" - Gi\\xE1: \", formatCurrency(service.price)))), error && jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 35\n    }\n  }, error)), jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, \"S\\u1ED1 l\\u01B0\\u1EE3ng\"), jsx(\"input\", {\n    type: \"number\",\n    value: quantity,\n    onChange: handleQuantityChange,\n    required: true,\n    min: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 25\n    }\n  })), jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, \"T\\u1ED5ng ph\\xED d\\u1ECBch v\\u1EE5\"), jsx(\"input\", {\n    type: \"text\",\n    value: formatCurrency(price * quantity),\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 25\n    }\n  })), jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 21\n    }\n  }, jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 25\n    }\n  }, \"Ch\\u1ECDn phi\\u1EBFu \\u0111\\u1EB7t ph\\xF2ng\"), loadingReservations ? jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 29\n    }\n  }, \"Loading reservations...\") : jsx(\"select\", {\n    value: selectedReservation,\n    onChange: e => setSelectedReservation(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 29\n    }\n  }, jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 33\n    }\n  }, \"Ch\\u1ECDn phi\\u1EBFu\"), reservations.map(reservation => jsx(\"option\", {\n    key: reservation.id,\n    value: reservation.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }\n  }, reservation.guest, \" - \", reservation.room.map(r => r.nameRoom).join(', ')))), error && jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 35\n    }\n  }, error)), jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 21\n    }\n  }, \"Th\\xEAm d\\u1ECBch v\\u1EE5\")), jsx(ServiceList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 17\n    }\n  })));\n};\nconst styles = css`\n    padding: 120px;\n    background-color: #f9f9f9;\n    h1 {\n        margin-bottom: 20px;\n    }\n    .form-group {\n        margin-bottom: 15px;\n        label {\n            display: block;\n            margin-bottom: 5px;\n        }\n        input, select {\n            width: 100%;\n            padding: 8px;\n            box-sizing: border-box;\n        }\n    }\n    button {\n        padding: 10px 20px;\n        background-color: #0000cd;\n        color: #fff;\n        border: none;\n        cursor: pointer;\n        &:hover {\n            background-color: #00008b;\n        }\n    }\n    p {\n        margin-top: 15px;\n        color: #ff1414;\n    }\n`;\nconst ServiceList = () => {\n  const [services, setServices] = useState([]);\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // Add useSnackbar here for notification\n\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await authAPI().get(endpoints['reservation_service']);\n        console.log('Thông tin phiếu_dịch vụ:', response.data);\n        setServices(response.data);\n      } catch (error) {\n        console.error('Error fetching services:', error);\n      }\n    };\n    fetchServices();\n  }, []);\n  const handleDelete = async serviceId => {\n    console.log('Attempting to delete service with ID:', serviceId); // Log ID dịch vụ\n    if (!serviceId) {\n      enqueueSnackbar('Service ID is undefined', {\n        variant: 'error'\n      });\n      return;\n    }\n    try {\n      const response = await authAPI().patch(endpoints['deactive_service'](serviceId), {\n        active: false\n      });\n      console.log('Service deactivation response:', response); // Log phản hồi thành công\n      setServices(services.filter(service => service.id !== serviceId));\n      enqueueSnackbar('Dịch vụ đã được xóa thành công', {\n        variant: 'success'\n      });\n    } catch (error) {\n      console.error('Error deleting service:', error); // Log lỗi\n      if (error.response) {\n        console.error('Error response data:', error.response.data); // Log dữ liệu phản hồi lỗi\n        console.error('Error response status:', error.response.status); // Log trạng thái phản hồi lỗi\n        console.error('Error response headers:', error.response.headers); // Log tiêu đề phản hồi lỗi\n        if (error.response.status === 404) {\n          enqueueSnackbar('Dịch vụ không tìm thấy, có thể đã bị xóa trước đó.', {\n            variant: 'warning'\n          });\n        } else {\n          enqueueSnackbar('Có lỗi xảy ra khi xóa dịch vụ', {\n            variant: 'error'\n          });\n        }\n      } else if (error.request) {\n        console.error('Error request:', error.request); // Log yêu cầu lỗi\n        enqueueSnackbar('Không thể kết nối với máy chủ', {\n          variant: 'error'\n        });\n      } else {\n        console.error('Error message:', error.message); // Log thông điệp lỗi\n        enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', {\n          variant: 'error'\n        });\n      }\n    }\n  };\n\n  // Group services by guest and room\n  const groupedServices = services.reduce((acc, service) => {\n    const key = `${service.guest_name} - Phòng: ${service.room_names}`;\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(service);\n    return acc;\n  }, {});\n  return jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }\n  }, jsx(\"div\", {\n    css: listStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 13\n    }\n  }, jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 17\n    }\n  }, \"Danh s\\xE1ch phi\\u1EBFu \\u0111\\u1EB7t ph\\xF2ng\"), Object.entries(groupedServices).map(([key, services]) => jsx(\"div\", {\n    key: key,\n    css: groupStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 21\n    }\n  }, jsx(\"h2\", {\n    css: groupTitleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 25\n    }\n  }, key), jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 25\n    }\n  }, services.map((service, index) => jsx(Col, {\n    key: index,\n    sm: \"12\",\n    md: \"6\",\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 33\n    }\n  }, jsx(Card, {\n    css: cardStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 37\n    }\n  }, jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 41\n    }\n  }, jsx(\"button\", {\n    className: \"delete-button\",\n    css: deleteButtonStyle,\n    onClick: () => handleDelete(service.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 45\n    }\n  }, \"X\\xF3a\"), jsx(CardTitle, {\n    tag: \"h5\",\n    css: cardTitleStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 45\n    }\n  }, service.nameService), jsx(CardText, {\n    css: cardTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 45\n    }\n  }, \"Gi\\xE1: \", service.price.toLocaleString(), \" VND\", jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 90\n    }\n  }), \"S\\u1ED1 l\\u01B0\\u1EE3ng: \", service.quantity))))))))));\n};\nconst listStyles = css`\n    padding: 20px;\n    background-color: #f9f9f9;\n    h1 {\n        margin-bottom: 20px;\n        text-align: center;\n    }\n`;\nconst groupStyle = css`\n    margin-bottom: 20px;\n    padding: 10px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\nconst groupTitleStyle = css`\n    font-size: 1.25rem;\n    color: #343a40;\n    margin-bottom: 10px;\n`;\nconst cardStyle = css`\n    position: relative;\n    margin-bottom: 10px;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s ease;\n    &:hover {\n        transform: scale(1.05);\n        .delete-button {\n            opacity: 1;\n            visibility: visible;\n        }\n    }\n`;\nconst deleteButtonStyle = css`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background-color: #dc3545;\n    color: #fff;\n    border: none;\n    padding: 5px 10px;\n    border-radius: 4px;\n    cursor: pointer;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease, visibility 0.3s ease;\n    &:hover {\n        background-color: #c82333;\n    }\n`;\nconst cardTitleStyle = css`\n    font-size: 1rem;\n    color: #007bff;\n`;\nconst cardTextStyle = css`\n    font-size: 0.875rem;\n    color: #343a40;\n`;\nexport default AddService;","map":{"version":3,"names":["css","jsx","useState","useEffect","Container","authAPI","endpoints","SnackbarProvider","useSnackbar","Card","CardBody","CardTitle","CardText","Row","Col","AddService","nameService","setNameService","price","setPrice","quantity","setQuantity","reservations","setReservations","services","setServices","selectedReservation","setSelectedReservation","selectedService","setSelectedService","error","setError","loadingReservations","setLoadingReservations","loadingServices","setLoadingServices","enqueueSnackbar","fetchReservations","response","get","data","err","fetchServices","handleServiceChange","e","selectedServiceId","target","value","find","service","id","parseInt","handleQuantityChange","newQuantity","handleSubmit","preventDefault","serviceData","reservationId","post","status","variant","console","formatCurrency","amount","Intl","NumberFormat","style","currency","format","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","styles","onSubmit","className","onChange","required","map","key","type","min","readOnly","reservation","guest","room","r","nameRoom","join","ServiceList","log","handleDelete","serviceId","patch","active","filter","headers","request","message","groupedServices","reduce","acc","guest_name","room_names","push","listStyles","Object","entries","groupStyle","groupTitleStyle","index","sm","md","lg","cardStyle","deleteButtonStyle","onClick","tag","cardTitleStyle","cardTextStyle","toLocaleString"],"sources":["D:/WebsiteQLKS_Django_React/react-website/src/components/Staff/AddService.js"],"sourcesContent":["// /** @jsx jsx */\r\n// import { css, jsx } from '@emotion/react';\r\n// import { useState, useEffect } from 'react';\r\n// import Container from '../Global/Container';\r\n// import { authAPI, endpoints } from '../../configs/APIs';\r\n// import { SnackbarProvider, useSnackbar } from 'notistack';\r\n// import { Card, CardBody, CardTitle, CardText, Row, Col } from 'reactstrap';\r\n\r\n// const AddService = () => {\r\n//     const [nameService, setNameService] = useState('');\r\n//     const [price, setPrice] = useState(0);\r\n//     const [quantity, setQuantity] = useState(1);\r\n//     const [reservations, setReservations] = useState([]);\r\n//     const [services, setServices] = useState([]);\r\n//     const [selectedReservation, setSelectedReservation] = useState('');\r\n//     const [selectedService, setSelectedService] = useState('');\r\n//     const [error, setError] = useState('');\r\n//     const [loadingReservations, setLoadingReservations] = useState(true);\r\n//     const [loadingServices, setLoadingServices] = useState(true);\r\n//     const [serviceList, setServiceList] = useState([]);\r\n\r\n//     const { enqueueSnackbar } = useSnackbar();\r\n\r\n//     useEffect(() => {\r\n//         const fetchReservations = async () => {\r\n//             try {\r\n//                 const response = await authAPI().get(endpoints['reservations']);\r\n//                 setReservations(response.data);\r\n//             } catch (err) {\r\n//                 setError('Failed to fetch reservations');\r\n//             } finally {\r\n//                 setLoadingReservations(false);\r\n//             }\r\n//         };\r\n\r\n//         fetchReservations();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchServices = async () => {\r\n//             try {\r\n//                 const response = await authAPI().get(endpoints['services']);\r\n//                 setServices(response.data);\r\n//             } catch (err) {\r\n//                 setError('Failed to fetch services');\r\n//             } finally {\r\n//                 setLoadingServices(false);\r\n//             }\r\n//         };\r\n\r\n//         fetchServices();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchServiceList = async () => {\r\n//             try {\r\n//                 const response = await authAPI().get(endpoints['reservation_service']);\r\n//                 setServiceList(response.data);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching service list:', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchServiceList();\r\n//     }, []);\r\n\r\n//     const handleServiceChange = (e) => {\r\n//         const selectedServiceId = e.target.value;\r\n//         const selectedService = services.find(service => service.id === parseInt(selectedServiceId));\r\n//         setSelectedService(selectedServiceId);\r\n//         if (selectedService) {\r\n//             setNameService(selectedService.nameService);\r\n//             setPrice(selectedService.price);\r\n//         }\r\n//     };\r\n\r\n//     const handleQuantityChange = (e) => {\r\n//         const newQuantity = parseInt(e.target.value);\r\n//         if (newQuantity > 0) {\r\n//             setQuantity(newQuantity);\r\n//         }\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         if (!selectedReservation || !selectedService) {\r\n//             enqueueSnackbar('Vui lòng chọn phiếu đặt phòng và dịch vụ', { variant: 'warning' });\r\n//             return;\r\n//         }\r\n\r\n//         const serviceData = {\r\n//             reservation: selectedReservation,\r\n//             service: selectedService,\r\n//             quantity,\r\n//         };\r\n\r\n//         try {\r\n//             const response = await authAPI().post(endpoints['reservation_service'], serviceData);\r\n//             if (response.status === 201) {\r\n//                 enqueueSnackbar('Dịch vụ đã được thêm thành công', { variant: 'success' });\r\n//                 setNameService('');\r\n//                 setPrice(0);\r\n//                 setQuantity(1);\r\n//                 setSelectedReservation('');\r\n//                 setSelectedService('');\r\n\r\n//                 // Refresh service list after adding a new service\r\n//                 const updatedServiceList = await authAPI().get(endpoints['reservation_service']);\r\n//                 setServiceList(updatedServiceList.data);\r\n//             } else {\r\n//                 enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error adding service:', error);\r\n//             enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\r\n//         }\r\n//     };\r\n\r\n//     const formatCurrency = (amount) => {\r\n//         return new Intl.NumberFormat('vi-VN', {\r\n//             style: 'currency',\r\n//             currency: 'VND'\r\n//         }).format(amount);\r\n//     };\r\n\r\n//     const groupedServices = serviceList.reduce((acc, service) => {\r\n//         const key = `${service.guest_name} - Phòng: ${service.room_names}`;\r\n//         if (!acc[key]) {\r\n//             acc[key] = [];\r\n//         }\r\n//         acc[key].push(service);\r\n//         return acc;\r\n//     }, {});\r\n\r\n//     return (\r\n//         <Container>\r\n//             <div css={styles}>\r\n//                 <h1>Thêm dịch vụ</h1>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Tên dịch vụ</label>\r\n//                         {loadingServices ? (\r\n//                             <p>Loading services...</p>\r\n//                         ) : (\r\n//                             <select\r\n//                                 value={selectedService}\r\n//                                 onChange={handleServiceChange}\r\n//                                 required\r\n//                             >\r\n//                                 <option value=\"\">Chọn dịch vụ</option>\r\n//                                 {services.map((service) => (\r\n//                                     <option key={service.id} value={service.id}>\r\n//                                         {service.nameService} - Giá: {formatCurrency(service.price)}\r\n//                                     </option>\r\n//                                 ))}\r\n//                             </select>\r\n//                         )}\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Số lượng</label>\r\n//                         <input\r\n//                             type=\"number\"\r\n//                             value={quantity}\r\n//                             onChange={handleQuantityChange}\r\n//                             required\r\n//                             min=\"1\"\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label>Tổng phí dịch vụ</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={formatCurrency(price * quantity)}\r\n//                             readOnly\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label>Chọn phiếu đặt phòng</label>\r\n//                         {loadingReservations ? (\r\n//                             <p>Loading reservations...</p>\r\n//                         ) : (\r\n//                             <select\r\n//                                 value={selectedReservation}\r\n//                                 onChange={(e) => setSelectedReservation(e.target.value)}\r\n//                                 required\r\n//                             >\r\n//                                 <option value=\"\">Chọn phiếu</option>\r\n//                                 {reservations.map((reservation) => (\r\n//                                     <option key={reservation.id} value={reservation.id}>\r\n//                                         {reservation.guest.name} - {reservation.room.map(r => r.nameRoom).join(', ')}\r\n//                                     </option>\r\n//                                 ))}\r\n//                             </select>\r\n//                         )}\r\n//                     </div>\r\n//                     <button type=\"submit\">Thêm dịch vụ</button>\r\n//                 </form>\r\n//                 <div css={listStyles}>\r\n//                     <h1>Danh sách phiếu đặt phòng</h1>\r\n//                     {Object.entries(groupedServices).map(([key, services]) => (\r\n//                         <div key={key} css={groupStyle}>\r\n//                             <h2 css={groupTitleStyle}>{key}</h2>\r\n//                             <Row>\r\n//                                 {services.map((service, index) => (\r\n//                                     <Col key={index} sm=\"12\" md=\"6\" lg=\"4\">\r\n//                                         <Card css={cardStyle}>\r\n//                                             <CardBody>\r\n//                                                 <CardTitle tag=\"h5\" css={cardTitleStyle}>{service.service_name}</CardTitle>\r\n//                                                 <CardText css={cardTextStyle}>\r\n//                                                     Dịch vụ: {service.nameService} <br />\r\n//                                                     Giá: {service.price.toLocaleString()} VND<br />\r\n//                                                     Số lượng: {service.quantity}\r\n//                                                 </CardText>\r\n//                                             </CardBody>\r\n//                                         </Card>\r\n//                                     </Col>\r\n//                                 ))}\r\n//                             </Row>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// const styles = css`\r\n//     padding: 120px;\r\n//     background-color: #f9f9f9;\r\n//     h1 {\r\n//         margin-bottom: 20px;\r\n//     }\r\n//     .form-group {\r\n//         margin-bottom: 15px;\r\n//         label {\r\n//             display: block;\r\n//             margin-bottom: 5px;\r\n//         }\r\n//         input, select {\r\n//             width: 100%;\r\n//             padding: 8px;\r\n//             box-sizing: border-box;\r\n//         }\r\n//     }\r\n//     button {\r\n//         padding: 10px 20px;\r\n//         background-color: #0000cd;\r\n//         color: #fff;\r\n//         border: none;\r\n//         cursor: pointer;\r\n//         &:hover {\r\n//             background-color: #00008b;\r\n//         }\r\n//     }\r\n//     p {\r\n//         margin-top: 15px;\r\n//         color: #ff1414;\r\n//     }\r\n// `;\r\n\r\n// const listStyles = css`\r\n//     padding: 20px;\r\n//     background-color: #f9f9f9;\r\n//     h1 {\r\n//         margin-bottom: 20px;\r\n//         text-align: center;\r\n//     }\r\n// `;\r\n\r\n// const groupStyle = css`\r\n//     margin-bottom: 20px;\r\n//     padding: 10px;\r\n//     background-color: #fff;\r\n//     border-radius: 8px;\r\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n// `;\r\n\r\n// const groupTitleStyle = css`\r\n//     font-size: 1.25rem;\r\n//     color: #343a40;\r\n//     margin-bottom: 10px;\r\n// `;\r\n\r\n// const cardStyle = css`\r\n//     margin-bottom: 10px;\r\n//     border: 1px solid #ddd;\r\n//     border-radius: 8px;\r\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n//     transition: transform 0.3s ease;\r\n//     &:hover {\r\n//         transform: scale(1.05);\r\n//     }\r\n// `;\r\n\r\n// const cardTitleStyle = css`\r\n//     font-size: 1rem;\r\n//     color: #007bff;\r\n// `;\r\n\r\n// const cardTextStyle = css`\r\n//     font-size: 0.875rem;\r\n//     color: #343a40;\r\n// `;\r\n\r\n// export default AddService;\r\n\r\n/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/react';\r\nimport { useState, useEffect } from 'react';\r\nimport Container from '../Global/Container';\r\nimport { authAPI, endpoints } from '../../configs/APIs';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\nimport { Card, CardBody, CardTitle, CardText, Row, Col } from 'reactstrap';\r\n\r\nconst AddService = () => {\r\n    const [nameService, setNameService] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [reservations, setReservations] = useState([]);\r\n    const [services, setServices] = useState([]);\r\n    const [selectedReservation, setSelectedReservation] = useState(null);\r\n    const [selectedService, setSelectedService] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loadingReservations, setLoadingReservations] = useState(true);\r\n    const [loadingServices, setLoadingServices] = useState(true);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        const fetchReservations = async () => {\r\n            try {\r\n                const response = await authAPI().get(endpoints['list_reservations']);\r\n                setReservations(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch reservations');\r\n            } finally {\r\n                setLoadingReservations(false);\r\n            }\r\n        };\r\n\r\n        fetchReservations();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchServices = async () => {\r\n            try {\r\n                const response = await authAPI().get(endpoints['services']);\r\n                // console.log(response.data)\r\n                setServices(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch services');\r\n            } finally {\r\n                setLoadingServices(false);\r\n            }\r\n        };\r\n\r\n        fetchServices();\r\n    }, []);\r\n\r\n    const handleServiceChange = (e) => {\r\n        const selectedServiceId = e.target.value;\r\n        const selectedService = services.find(service => service.id === parseInt(selectedServiceId));\r\n        setSelectedService(selectedServiceId);\r\n        setNameService(selectedService.nameService);\r\n        setPrice(selectedService.price);\r\n    };    \r\n\r\n    const handleQuantityChange = (e) => {\r\n        const newQuantity = e.target.value;\r\n        setQuantity(newQuantity);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const serviceData = {\r\n            reservationId: selectedReservation,\r\n            service: selectedService,\r\n            quantity,\r\n        };\r\n\r\n        try {\r\n            const response = await authAPI().post(endpoints['reservation_service'], serviceData);\r\n\r\n            if (response.status === 201) {\r\n                enqueueSnackbar('Dịch vụ đã được thêm thành công', { variant: 'success' });\r\n                setNameService('');\r\n                setPrice(0);\r\n                setQuantity(1);\r\n                setSelectedReservation(null);\r\n                setSelectedService('');\r\n            } else {\r\n                enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding service:', error);\r\n            enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\r\n        }\r\n    };\r\n\r\n    const formatCurrency = (amount) => {\r\n        return new Intl.NumberFormat('vi-VN', {\r\n            style: 'currency',\r\n            currency: 'VND'\r\n        }).format(amount);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <div css={styles}>\r\n                <h1>Thêm dịch vụ</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Tên dịch vụ</label>\r\n                        {loadingServices ? (\r\n                            <p>Loading services...</p>\r\n                        ) : (\r\n                            <select\r\n                                value={selectedService}\r\n                                onChange={handleServiceChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Chọn dịch vụ</option>\r\n                                {services.map((service) => (\r\n                                    <option key={service.id} value={service.id}>\r\n                                        {service.nameService} - Giá: {formatCurrency(service.price)}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        )}\r\n                        {error && <p>{error}</p>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Số lượng</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={quantity}\r\n                            onChange={handleQuantityChange}\r\n                            required\r\n                            min=\"1\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Tổng phí dịch vụ</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={formatCurrency(price * quantity)}\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Chọn phiếu đặt phòng</label>\r\n                        {loadingReservations ? (\r\n                            <p>Loading reservations...</p>\r\n                        ) : (\r\n                            <select\r\n                                value={selectedReservation}\r\n                                onChange={(e) => setSelectedReservation(e.target.value)}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Chọn phiếu</option>\r\n                                {reservations.map((reservation) => (\r\n                                    <option key={reservation.id} value={reservation.id}>\r\n                                        {reservation.guest} - {reservation.room.map(r => r.nameRoom).join(', ')}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        )}\r\n                        {error && <p>{error}</p>}\r\n                    </div>\r\n                    <button type=\"submit\">Thêm dịch vụ</button>\r\n                </form>\r\n                <ServiceList />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst styles = css`\r\n    padding: 120px;\r\n    background-color: #f9f9f9;\r\n    h1 {\r\n        margin-bottom: 20px;\r\n    }\r\n    .form-group {\r\n        margin-bottom: 15px;\r\n        label {\r\n            display: block;\r\n            margin-bottom: 5px;\r\n        }\r\n        input, select {\r\n            width: 100%;\r\n            padding: 8px;\r\n            box-sizing: border-box;\r\n        }\r\n    }\r\n    button {\r\n        padding: 10px 20px;\r\n        background-color: #0000cd;\r\n        color: #fff;\r\n        border: none;\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: #00008b;\r\n        }\r\n    }\r\n    p {\r\n        margin-top: 15px;\r\n        color: #ff1414;\r\n    }\r\n`;\r\n\r\nconst ServiceList = () => {\r\n    const [services, setServices] = useState([]);\r\n    const { enqueueSnackbar } = useSnackbar(); // Add useSnackbar here for notification\r\n\r\n    useEffect(() => {\r\n        const fetchServices = async () => {\r\n            try {\r\n                const response = await authAPI().get(endpoints['reservation_service']);\r\n                console.log('Thông tin phiếu_dịch vụ:', response.data)\r\n                setServices(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching services:', error);\r\n            }\r\n        };\r\n\r\n        fetchServices();\r\n    }, []);\r\n    \r\n    const handleDelete = async (serviceId) => {\r\n        console.log('Attempting to delete service with ID:', serviceId); // Log ID dịch vụ\r\n        if (!serviceId) {\r\n            enqueueSnackbar('Service ID is undefined', { variant: 'error' });\r\n            return;\r\n        }\r\n        try {\r\n            const response = await authAPI().patch(endpoints['deactive_service'](serviceId), { active: false });\r\n            console.log('Service deactivation response:', response); // Log phản hồi thành công\r\n            setServices(services.filter(service => service.id !== serviceId));\r\n            enqueueSnackbar('Dịch vụ đã được xóa thành công', { variant: 'success' });\r\n        } catch (error) {\r\n            console.error('Error deleting service:', error); // Log lỗi\r\n            if (error.response) {\r\n                console.error('Error response data:', error.response.data); // Log dữ liệu phản hồi lỗi\r\n                console.error('Error response status:', error.response.status); // Log trạng thái phản hồi lỗi\r\n                console.error('Error response headers:', error.response.headers); // Log tiêu đề phản hồi lỗi\r\n                if (error.response.status === 404) {\r\n                    enqueueSnackbar('Dịch vụ không tìm thấy, có thể đã bị xóa trước đó.', { variant: 'warning' });\r\n                } else {\r\n                    enqueueSnackbar('Có lỗi xảy ra khi xóa dịch vụ', { variant: 'error' });\r\n                }\r\n            } else if (error.request) {\r\n                console.error('Error request:', error.request); // Log yêu cầu lỗi\r\n                enqueueSnackbar('Không thể kết nối với máy chủ', { variant: 'error' });\r\n            } else {\r\n                console.error('Error message:', error.message); // Log thông điệp lỗi\r\n                enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\r\n            }\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    \r\n\r\n    // Group services by guest and room\r\n    const groupedServices = services.reduce((acc, service) => {\r\n        const key = `${service.guest_name} - Phòng: ${service.room_names}`;\r\n        if (!acc[key]) {\r\n            acc[key] = [];\r\n        }\r\n        acc[key].push(service);\r\n        return acc;\r\n    }, {});\r\n\r\n    return (\r\n        <Container>\r\n            <div css={listStyles}>\r\n                <h1>Danh sách phiếu đặt phòng</h1>\r\n                {Object.entries(groupedServices).map(([key, services]) => (\r\n                    <div key={key} css={groupStyle}>\r\n                        <h2 css={groupTitleStyle}>{key}</h2>\r\n                        <Row>\r\n                            {services.map((service, index) => (\r\n                                <Col key={index} sm=\"12\" md=\"6\" lg=\"4\">\r\n                                    <Card css={cardStyle}>\r\n                                        <CardBody>\r\n                                            <button\r\n                                                className=\"delete-button\"\r\n                                                css={deleteButtonStyle}\r\n                                                onClick={() => handleDelete(service.id)}\r\n                                            >\r\n                                                Xóa\r\n                                            </button>\r\n                                            <CardTitle tag=\"h5\" css={cardTitleStyle}>{service.nameService}</CardTitle>\r\n                                            <CardText css={cardTextStyle}>\r\n                                                Giá: {service.price.toLocaleString()} VND<br />\r\n                                                Số lượng: {service.quantity}\r\n                                            </CardText>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst listStyles = css`\r\n    padding: 20px;\r\n    background-color: #f9f9f9;\r\n    h1 {\r\n        margin-bottom: 20px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst groupStyle = css`\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst groupTitleStyle = css`\r\n    font-size: 1.25rem;\r\n    color: #343a40;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst cardStyle = css`\r\n    position: relative;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    transition: transform 0.3s ease;\r\n    &:hover {\r\n        transform: scale(1.05);\r\n        .delete-button {\r\n            opacity: 1;\r\n            visibility: visible;\r\n        }\r\n    }\r\n`;\r\n\r\nconst deleteButtonStyle = css`\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: #dc3545;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 5px 10px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: opacity 0.3s ease, visibility 0.3s ease;\r\n    &:hover {\r\n        background-color: #c82333;\r\n    }\r\n`;\r\n\r\nconst cardTitleStyle = css`\r\n    font-size: 1rem;\r\n    color: #007bff;\r\n`;\r\n\r\nconst cardTextStyle = css`\r\n    font-size: 0.875rem;\r\n    color: #343a40;\r\n`;\r\n\r\nexport default AddService;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module"}