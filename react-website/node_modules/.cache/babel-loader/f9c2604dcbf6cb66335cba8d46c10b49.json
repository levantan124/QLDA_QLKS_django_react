{"ast":null,"code":"var _jsxFileName = \"/Users/ttc/Desktop/QLDA_QLKS_django_react/react-website/src/components/Staff/ManageBookings.js\";\n// /** @jsx jsx */\n// import { css, jsx } from '@emotion/react';\n// import { useEffect, useState } from 'react';\n// import { authAPI, endpoints } from '../../configs/APIs';\n// import { Modal, Button, Form } from 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const ReservationDetailsModal = ({ showModal, handleClose, selectedReservation, setSelectedReservation, handleUpdate, handleDelete }) => {\n//     const [availableRooms, setAvailableRooms] = useState([]);\n\n//     useEffect(() => {\n//         const fetchRooms = async () => {\n//             try {\n//                 const response = await authAPI().get('http://192.168.1.113:8000/rooms/');\n//                 setAvailableRooms(response.data);\n//             } catch (error) {\n//                 console.error('There was an error fetching the rooms!', error);\n//             }\n//         };\n\n//         fetchRooms();\n//     }, []);\n\n//     return (\n//         <Modal show={showModal} onHide={handleClose}>\n//             <Modal.Header closeButton>\n//                 <Modal.Title>Chi tiết Đặt Phòng</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//                 {selectedReservation && (\n//                     <Form>\n//                         <Form.Group controlId=\"formReservationId\">\n//                             <Form.Label>ID</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.id}\n//                                 readOnly\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formGuest\">\n//                             <Form.Label>Khách</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.guest}\n//                                 readOnly\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formRoom\">\n//                             <Form.Label>Phòng</Form.Label>\n//                             <Form.Select\n//                                 value={selectedReservation.room[0]?.nameRoom || ''}\n//                                 onChange={(e) => setSelectedReservation(prev => ({\n//                                     ...prev,\n//                                     room: availableRooms.filter(room => room.nameRoom === e.target.value)\n//                                 }))}\n//                             >\n//                                 <option value=\"\">Chọn phòng</option>\n//                                 {availableRooms.map(room => (\n//                                     <option key={room.id} value={room.nameRoom}>\n//                                         {room.nameRoom}\n//                                     </option>\n//                                 ))}\n//                             </Form.Select>\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formBookDate\">\n//                             <Form.Label>Ngày đặt</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.bookDate}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, bookDate: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formCheckin\">\n//                             <Form.Label>Nhận phòng</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.checkin}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkin: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formCheckout\">\n//                             <Form.Label>Trả phòng</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.checkout}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkout: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formActive\">\n//                             <Form.Label>Trạng thái đặt</Form.Label>\n//                             <Form.Check\n//                                 type=\"checkbox\"\n//                                 checked={selectedReservation.statusCheckin}\n//                                 onChange={(e) => setSelectedReservation(prev => ({\n//                                     ...prev,\n//                                     statusCheckin: e.target.checked\n//                                 }))}\n//                             />\n\n//                         </Form.Group>\n//                     </Form>\n//                 )}\n//             </Modal.Body>\n//             <Modal.Footer>\n//                 <Button variant=\"secondary\" onClick={handleClose}>\n//                     Đóng\n//                 </Button>\n//                 <Button variant=\"danger\" onClick={handleDelete}>\n//                     Xóa\n//                 </Button>\n//                 <Button variant=\"primary\" onClick={handleUpdate}>\n//                     Sửa\n//                 </Button>\n//             </Modal.Footer>\n//         </Modal>\n//     );\n// };\n\n// const ManageBookings = () => {\n//     const [reservations, setReservations] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [showModal, setShowModal] = useState(false);\n//     const [selectedReservation, setSelectedReservation] = useState(null);\n\n//     const handleShow = (reservation) => {\n//         setSelectedReservation(reservation);\n//         setShowModal(true);\n//     };\n\n//     const handleClose = () => setShowModal(false);\n\n//     // const handleUpdate = async () => {\n//     //     if (!selectedReservation) return;\n\n//     //     // Tạo một bản sao của đối tượng selectedReservation để sửa đổi\n//     //     const updatedReservation = { ...selectedReservation };\n//     //     console.log('Dữ liệu cập nhật:', updatedReservation);\n\n//     //     try {\n//     //         // Gọi API để cập nhật phiếu đặt phòng với giá trị mới của statusCheckin\n//     //         await authAPI().patch(endpoints['update_reservation'](updatedReservation.id), updatedReservation);\n//     //         // Làm mới danh sách phiếu đặt phòng sau khi cập nhật\n//     //         const response = await authAPI().get(endpoints['list_reservations']);\n\n//     //         console.log(\"Kết quả cập nhật\", response.data)\n//     //         setReservations(response.data);\n//     //     } catch (error) {\n//     //         setError('Failed to update reservation');\n//     //         console.error('Failed to update reservation:', error);\n//     //     } finally {\n//     //         handleClose();\n//     //     }\n//     // };\n//     const handleUpdate = async () => {\n//         if (!selectedReservation) return;\n\n//         // Create a copy of the selectedReservation object for modification\n//         const updatedReservation = { ...selectedReservation };\n//         console.log('Data to update:', updatedReservation);\n\n//         try {\n//             // Log the endpoint being called\n//             const updateEndpoint = endpoints['update_reservation'](updatedReservation.id);\n//             console.log('Update endpoint:', updateEndpoint);\n\n//             // Call API to update the reservation with the new statusCheckin value\n//             await authAPI().patch(updateEndpoint, updatedReservation, {\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 }\n//             });\n\n//             // Refresh the reservation list after update\n//             const response = await authAPI().get(endpoints['list_reservations']);\n//             console.log('Update result:', response.data);\n//             setReservations(response.data);\n//         } catch (error) {\n//             console.error('Failed to update reservation:', error.response ? error.response.data : error.message);\n//             setError('Failed to update reservation');\n//         } finally {\n//             handleClose();\n//         }\n//     };\n\n//     const handleDelete = async () => {\n//         if (!selectedReservation) return;\n\n//         // Hiển thị hộp thoại xác nhận\n//         const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\n\n//         if (confirmed) {\n//             try {\n//                 // Gọi API để vô hiệu hóa phiếu đặt phòng\n//                 await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\n\n//                 // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\n//                 const response = await authAPI().get(endpoints['list_reservations']);\n//                 setReservations(response.data);\n//             } catch (error) {\n//                 setError('Failed to deactivate reservation');\n//             } finally {\n//                 handleClose();\n//             }\n//         }\n//     };\n\n//     useEffect(() => {\n//         const fetchReservations = async () => {\n//           try {\n//             const response = await authAPI().get(endpoints['list_reservations']);\n//             console.log('Reservations fetched:', response.data); // Kiểm tra dữ liệu nhận được\n//             setReservations(response.data);\n//           } catch (err) {\n//             setError('Failed to fetch reservations');\n//             console.error('Failed to fetch reservations:', err);\n//           } finally {\n//             setLoading(false);\n//           }\n//         };\n\n//         fetchReservations();\n//       }, []);\n\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>{error}</p>;\n\n//     return (\n//         <div css={styles}>\n//             <h1>Quản lý Đặt Phòng</h1>\n//             <table css={tableStyles}>\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>Khách</th>\n//                         <th>Phòng</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Nhận phòng</th>\n//                         <th>Trả phòng</th>\n//                         <th>Trạng thái</th>\n//                         <th>Hành động</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {reservations.map(reservation => (\n//                         <tr key={reservation.id}>\n//                             <td>{reservation.id}</td>\n//                             <td>{reservation.guest?.name}</td>\n//                             <td>{reservation.room.map(r => r.nameRoom).join(', ')}</td>\n//                             <td>{reservation.bookDate}</td>\n//                             <td>{reservation.checkin}</td>\n//                             <td>{reservation.checkout}</td>\n//                             <td>{reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'}</td>\n//                             <td>\n//                                 <Button variant=\"primary\" onClick={() => handleShow(reservation)}>Sửa</Button>\n//                                 {/* <Button variant=\"danger\" onClick={() => handleDelete(reservation)}>Xóa</Button> */}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             <ReservationDetailsModal\n//                 showModal={showModal}\n//                 handleClose={handleClose}\n//                 selectedReservation={selectedReservation}\n//                 setSelectedReservation={setSelectedReservation}\n//                 handleUpdate={handleUpdate}\n//                 handleDelete={handleDelete}\n//             />\n//         </div>\n//     );\n// };\n\n// const styles = css`\n//     padding-top: 120px;\n//     background-color: #f4f4f4;\n//     min-height: 100vh;\n\n//     h1 {\n//         color: #0000CD;\n//         text-align: center;\n//         margin-bottom: 20px;\n//     }\n\n//     p {\n//         font-size: 16px;\n//         text-align: center;\n//     }\n// `;\n\n// const tableStyles = css`\n//     width: 100%;\n//     border-collapse: collapse;\n//     margin-top: 20px;\n\n//     th, td {\n//         border: 1px solid #ddd;\n//         padding: 8px;\n//         text-align: left;\n//     }\n\n//     th {\n//         background-color: #0000CD;\n//         color: white;\n//     }\n\n//     tr:nth-of-type(even) {\n//         background-color: #f2f2f2;\n//     }\n\n//     tr:hover {\n//         background-color: #ddd;\n//     }\n\n//     td {\n//         max-width: 150px;\n//         white-space: nowrap;\n//         overflow: hidden;\n//         text-overflow: ellipsis;\n//     }\n// `;\n\n// export default ManageBookings;\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { authAPI, endpoints } from '../../configs/APIs';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst ReservationDetailsModal = ({\n  showModal,\n  handleClose,\n  selectedReservation,\n  setSelectedReservation,\n  handleUpdate,\n  handleDelete\n}) => {\n  var _selectedReservation$, _selectedReservation$2;\n  const [availableRooms, setAvailableRooms] = useState([]);\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await authAPI().get('/rooms/');\n        setAvailableRooms(response.data);\n      } catch (error) {\n        console.error('There was an error fetching the rooms!', error);\n      }\n    };\n    fetchRooms();\n  }, []);\n  return jsx(Modal, {\n    show: showModal,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }\n  }, jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, \"Chi ti\\u1EBFt \\u0110\\u1EB7t Ph\\xF2ng\")), jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, selectedReservation && jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }, jsx(Form.Group, {\n    controlId: \"formReservationId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, \"ID\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.id,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formGuest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, \"Kh\\xE1ch\"), jsx(Form.Control, {\n    type: \"text\",\n    value: (_selectedReservation$ = selectedReservation.guest) === null || _selectedReservation$ === void 0 ? void 0 : _selectedReservation$.username,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formRoom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 29\n    }\n  }, \"Ph\\xF2ng\"), jsx(Form.Select, {\n    value: ((_selectedReservation$2 = selectedReservation.room[0]) === null || _selectedReservation$2 === void 0 ? void 0 : _selectedReservation$2.nameRoom) || '',\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      room: availableRooms.filter(room => room.nameRoom === e.target.value)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }, jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 33\n    }\n  }, \"Ch\\u1ECDn ph\\xF2ng\"), availableRooms.map(room => jsx(\"option\", {\n    key: room.id,\n    value: room.nameRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 37\n    }\n  }, room.nameRoom)))), jsx(Form.Group, {\n    controlId: \"formBookDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 29\n    }\n  }, \"Ng\\xE0y \\u0111\\u1EB7t\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.bookDate,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      bookDate: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formCheckin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, \"Nh\\u1EADn ph\\xF2ng\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.checkin,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      checkin: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formCheckout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, \"Tr\\u1EA3 ph\\xF2ng\"), jsx(Form.Control, {\n    type: \"text\",\n    value: selectedReservation.checkout,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      checkout: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  })), jsx(Form.Group, {\n    controlId: \"formActive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, \"Tr\\u1EA1ng th\\xE1i \\u0111\\u1EB7t\"), jsx(Form.Check, {\n    type: \"checkbox\",\n    checked: selectedReservation.statusCheckin,\n    onChange: e => setSelectedReservation(prev => ({\n      ...prev,\n      statusCheckin: e.target.checked\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 29\n    }\n  })))), jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }, jsx(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\xF3ng\"), jsx(Button, {\n    variant: \"danger\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 17\n    }\n  }, \"X\\xF3a\"), jsx(Button, {\n    variant: \"primary\",\n    onClick: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }, \"S\\u1EEDa\")));\n};\nconst ManageBookings = () => {\n  const [reservations, setReservations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const handleShow = reservation => {\n    setSelectedReservation(reservation);\n    setShowModal(true);\n  };\n  const handleClose = () => setShowModal(false);\n  const handleUpdate = async () => {\n    if (!selectedReservation) return;\n    const updatedReservation = {\n      ...selectedReservation,\n      guest: {\n        ...selectedReservation.guest\n      },\n      room: selectedReservation.room.map(room => room.id)\n    };\n    try {\n      console.log('Cập nhật:', updatedReservation);\n      const response1 = await authAPI().post(endpoints['update_reservation'](updatedReservation.id));\n      console.log('Cập nhật thành công:', response1.data);\n      const response2 = await authAPI().get(endpoints['list_reservations']);\n      setReservations(response2.data);\n    } catch (error) {\n      var _error$response;\n      console.error('Lỗi cập nhật:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      // Ghi log chi tiết lỗi\n      if (error.response && error.response.data) {\n        console.log('Chi tiết lỗi từ API:', error.response.data);\n      }\n    } finally {\n      handleClose();\n    }\n  };\n  const handleDelete = async () => {\n    if (!selectedReservation) return;\n\n    // Hiển thị hộp thoại xác nhận\n    const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\n    if (confirmed) {\n      try {\n        // Gọi API để vô hiệu hóa phiếu đặt phòng\n        await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\n\n        // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\n        const response = await authAPI().get(endpoints['list_reservations']);\n        setReservations(response.data);\n      } catch (error) {\n        setError('Failed to deactivate reservation');\n      } finally {\n        handleClose();\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchReservations = async () => {\n      try {\n        const response = await authAPI().get(endpoints['list_reservations']);\n        setReservations(response.data);\n      } catch (err) {\n        setError('Failed to fetch reservations');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReservations();\n  }, []);\n  if (loading) return jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 23\n    }\n  }, error);\n  return jsx(\"div\", {\n    css: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  }, jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 13\n    }\n  }, \"L\\u1EC5 t\\xE2n nh\\u1EADn ph\\xF2ng\"), jsx(\"table\", {\n    css: tableStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 13\n    }\n  }, jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 17\n    }\n  }, jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 21\n    }\n  }, jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 25\n    }\n  }, \"ID\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 25\n    }\n  }, \"Kh\\xE1ch\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 25\n    }\n  }, \"Ph\\xF2ng\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 25\n    }\n  }, \"Ng\\xE0y \\u0111\\u1EB7t\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 25\n    }\n  }, \"Nh\\u1EADn ph\\xF2ng\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 25\n    }\n  }, \"Tr\\u1EA3 ph\\xF2ng\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 25\n    }\n  }, \"Tr\\u1EA1ng th\\xE1i\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 25\n    }\n  }, \"H\\xE0nh \\u0111\\u1ED9ng\"))), jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 17\n    }\n  }, reservations.map(reservation => {\n    var _reservation$guest;\n    return jsx(\"tr\", {\n      key: reservation.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 25\n      }\n    }, jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 29\n      }\n    }, reservation.id), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 29\n      }\n    }, (_reservation$guest = reservation.guest) === null || _reservation$guest === void 0 ? void 0 : _reservation$guest.username), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 29\n      }\n    }, reservation.room.map(r => r.nameRoom).join(', ')), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 29\n      }\n    }, reservation.bookDate), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 29\n      }\n    }, reservation.checkin), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 29\n      }\n    }, reservation.checkout), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 29\n      }\n    }, reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 29\n      }\n    }, jsx(Button, {\n      variant: \"primary\",\n      onClick: () => handleShow(reservation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 33\n      }\n    }, \"S\\u1EEDa\")));\n  }))), jsx(ReservationDetailsModal, {\n    showModal: showModal,\n    handleClose: handleClose,\n    selectedReservation: selectedReservation,\n    setSelectedReservation: setSelectedReservation,\n    handleUpdate: handleUpdate,\n    handleDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }));\n};\nconst styles = css`\n    padding-top: 120px;\n    background-color: #f4f4f4;\n    min-height: 100vh;\n\n    h1 {\n        color: #0000CD;\n        text-align: center;\n        margin-bottom: 20px;\n    }\n\n    p {\n        font-size: 16px;\n        text-align: center;\n    }\n`;\nconst tableStyles = css`\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #0000CD;\n        color: white;\n    }\n\n    tr:nth-of-type(even) {\n        background-color: #f2f2f2;\n    }\n\n    tr:hover {\n        background-color: #ddd;\n    }\n\n    td {\n        max-width: 150px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n`;\nexport default ManageBookings;","map":{"version":3,"names":["css","jsx","useEffect","useState","authAPI","endpoints","Modal","Button","Form","ReservationDetailsModal","showModal","handleClose","selectedReservation","setSelectedReservation","handleUpdate","handleDelete","_selectedReservation$","_selectedReservation$2","availableRooms","setAvailableRooms","fetchRooms","response","get","data","error","console","show","onHide","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","value","id","readOnly","guest","username","Select","room","nameRoom","onChange","e","prev","filter","target","map","key","bookDate","checkin","checkout","Check","checked","statusCheckin","Footer","variant","onClick","ManageBookings","reservations","setReservations","loading","setLoading","setError","setShowModal","handleShow","reservation","updatedReservation","log","response1","post","response2","_error$response","message","confirmed","window","confirm","patch","fetchReservations","err","styles","tableStyles","_reservation$guest","r","join"],"sources":["/Users/ttc/Desktop/QLDA_QLKS_django_react/react-website/src/components/Staff/ManageBookings.js"],"sourcesContent":["// /** @jsx jsx */\n// import { css, jsx } from '@emotion/react';\n// import { useEffect, useState } from 'react';\n// import { authAPI, endpoints } from '../../configs/APIs';\n// import { Modal, Button, Form } from 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const ReservationDetailsModal = ({ showModal, handleClose, selectedReservation, setSelectedReservation, handleUpdate, handleDelete }) => {\n//     const [availableRooms, setAvailableRooms] = useState([]);\n\n//     useEffect(() => {\n//         const fetchRooms = async () => {\n//             try {\n//                 const response = await authAPI().get('http://192.168.1.113:8000/rooms/');\n//                 setAvailableRooms(response.data);\n//             } catch (error) {\n//                 console.error('There was an error fetching the rooms!', error);\n//             }\n//         };\n\n//         fetchRooms();\n//     }, []);\n\n//     return (\n//         <Modal show={showModal} onHide={handleClose}>\n//             <Modal.Header closeButton>\n//                 <Modal.Title>Chi tiết Đặt Phòng</Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//                 {selectedReservation && (\n//                     <Form>\n//                         <Form.Group controlId=\"formReservationId\">\n//                             <Form.Label>ID</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.id}\n//                                 readOnly\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formGuest\">\n//                             <Form.Label>Khách</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.guest}\n//                                 readOnly\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formRoom\">\n//                             <Form.Label>Phòng</Form.Label>\n//                             <Form.Select\n//                                 value={selectedReservation.room[0]?.nameRoom || ''}\n//                                 onChange={(e) => setSelectedReservation(prev => ({\n//                                     ...prev,\n//                                     room: availableRooms.filter(room => room.nameRoom === e.target.value)\n//                                 }))}\n//                             >\n//                                 <option value=\"\">Chọn phòng</option>\n//                                 {availableRooms.map(room => (\n//                                     <option key={room.id} value={room.nameRoom}>\n//                                         {room.nameRoom}\n//                                     </option>\n//                                 ))}\n//                             </Form.Select>\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formBookDate\">\n//                             <Form.Label>Ngày đặt</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.bookDate}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, bookDate: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formCheckin\">\n//                             <Form.Label>Nhận phòng</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.checkin}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkin: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formCheckout\">\n//                             <Form.Label>Trả phòng</Form.Label>\n//                             <Form.Control\n//                                 type=\"text\"\n//                                 value={selectedReservation.checkout}\n//                                 onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkout: e.target.value }))}\n//                             />\n//                         </Form.Group>\n//                         <Form.Group controlId=\"formActive\">\n//                             <Form.Label>Trạng thái đặt</Form.Label>\n//                             <Form.Check\n//                                 type=\"checkbox\"\n//                                 checked={selectedReservation.statusCheckin}\n//                                 onChange={(e) => setSelectedReservation(prev => ({\n//                                     ...prev,\n//                                     statusCheckin: e.target.checked\n//                                 }))}\n//                             />\n\n//                         </Form.Group>\n//                     </Form>\n//                 )}\n//             </Modal.Body>\n//             <Modal.Footer>\n//                 <Button variant=\"secondary\" onClick={handleClose}>\n//                     Đóng\n//                 </Button>\n//                 <Button variant=\"danger\" onClick={handleDelete}>\n//                     Xóa\n//                 </Button>\n//                 <Button variant=\"primary\" onClick={handleUpdate}>\n//                     Sửa\n//                 </Button>\n//             </Modal.Footer>\n//         </Modal>\n//     );\n// };\n\n// const ManageBookings = () => {\n//     const [reservations, setReservations] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [showModal, setShowModal] = useState(false);\n//     const [selectedReservation, setSelectedReservation] = useState(null);\n\n//     const handleShow = (reservation) => {\n//         setSelectedReservation(reservation);\n//         setShowModal(true);\n//     };\n\n//     const handleClose = () => setShowModal(false);\n\n//     // const handleUpdate = async () => {\n//     //     if (!selectedReservation) return;\n\n//     //     // Tạo một bản sao của đối tượng selectedReservation để sửa đổi\n//     //     const updatedReservation = { ...selectedReservation };\n//     //     console.log('Dữ liệu cập nhật:', updatedReservation);\n\n//     //     try {\n//     //         // Gọi API để cập nhật phiếu đặt phòng với giá trị mới của statusCheckin\n//     //         await authAPI().patch(endpoints['update_reservation'](updatedReservation.id), updatedReservation);\n//     //         // Làm mới danh sách phiếu đặt phòng sau khi cập nhật\n//     //         const response = await authAPI().get(endpoints['list_reservations']);\n\n//     //         console.log(\"Kết quả cập nhật\", response.data)\n//     //         setReservations(response.data);\n//     //     } catch (error) {\n//     //         setError('Failed to update reservation');\n//     //         console.error('Failed to update reservation:', error);\n//     //     } finally {\n//     //         handleClose();\n//     //     }\n//     // };\n//     const handleUpdate = async () => {\n//         if (!selectedReservation) return;\n    \n//         // Create a copy of the selectedReservation object for modification\n//         const updatedReservation = { ...selectedReservation };\n//         console.log('Data to update:', updatedReservation);\n    \n//         try {\n//             // Log the endpoint being called\n//             const updateEndpoint = endpoints['update_reservation'](updatedReservation.id);\n//             console.log('Update endpoint:', updateEndpoint);\n    \n//             // Call API to update the reservation with the new statusCheckin value\n//             await authAPI().patch(updateEndpoint, updatedReservation, {\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 }\n//             });\n    \n//             // Refresh the reservation list after update\n//             const response = await authAPI().get(endpoints['list_reservations']);\n//             console.log('Update result:', response.data);\n//             setReservations(response.data);\n//         } catch (error) {\n//             console.error('Failed to update reservation:', error.response ? error.response.data : error.message);\n//             setError('Failed to update reservation');\n//         } finally {\n//             handleClose();\n//         }\n//     };\n    \n\n\n//     const handleDelete = async () => {\n//         if (!selectedReservation) return;\n    \n//         // Hiển thị hộp thoại xác nhận\n//         const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\n    \n//         if (confirmed) {\n//             try {\n//                 // Gọi API để vô hiệu hóa phiếu đặt phòng\n//                 await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\n    \n//                 // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\n//                 const response = await authAPI().get(endpoints['list_reservations']);\n//                 setReservations(response.data);\n//             } catch (error) {\n//                 setError('Failed to deactivate reservation');\n//             } finally {\n//                 handleClose();\n//             }\n//         }\n//     };\n    \n\n\n//     useEffect(() => {\n//         const fetchReservations = async () => {\n//           try {\n//             const response = await authAPI().get(endpoints['list_reservations']);\n//             console.log('Reservations fetched:', response.data); // Kiểm tra dữ liệu nhận được\n//             setReservations(response.data);\n//           } catch (err) {\n//             setError('Failed to fetch reservations');\n//             console.error('Failed to fetch reservations:', err);\n//           } finally {\n//             setLoading(false);\n//           }\n//         };\n      \n//         fetchReservations();\n//       }, []);\n\n//     if (loading) return <p>Loading...</p>;\n//     if (error) return <p>{error}</p>;\n\n//     return (\n//         <div css={styles}>\n//             <h1>Quản lý Đặt Phòng</h1>\n//             <table css={tableStyles}>\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>Khách</th>\n//                         <th>Phòng</th>\n//                         <th>Ngày đặt</th>\n//                         <th>Nhận phòng</th>\n//                         <th>Trả phòng</th>\n//                         <th>Trạng thái</th>\n//                         <th>Hành động</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {reservations.map(reservation => (\n//                         <tr key={reservation.id}>\n//                             <td>{reservation.id}</td>\n//                             <td>{reservation.guest?.name}</td>\n//                             <td>{reservation.room.map(r => r.nameRoom).join(', ')}</td>\n//                             <td>{reservation.bookDate}</td>\n//                             <td>{reservation.checkin}</td>\n//                             <td>{reservation.checkout}</td>\n//                             <td>{reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'}</td>\n//                             <td>\n//                                 <Button variant=\"primary\" onClick={() => handleShow(reservation)}>Sửa</Button>\n//                                 {/* <Button variant=\"danger\" onClick={() => handleDelete(reservation)}>Xóa</Button> */}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             <ReservationDetailsModal\n//                 showModal={showModal}\n//                 handleClose={handleClose}\n//                 selectedReservation={selectedReservation}\n//                 setSelectedReservation={setSelectedReservation}\n//                 handleUpdate={handleUpdate}\n//                 handleDelete={handleDelete}\n//             />\n//         </div>\n//     );\n// };\n\n// const styles = css`\n//     padding-top: 120px;\n//     background-color: #f4f4f4;\n//     min-height: 100vh;\n\n//     h1 {\n//         color: #0000CD;\n//         text-align: center;\n//         margin-bottom: 20px;\n//     }\n\n//     p {\n//         font-size: 16px;\n//         text-align: center;\n//     }\n// `;\n\n// const tableStyles = css`\n//     width: 100%;\n//     border-collapse: collapse;\n//     margin-top: 20px;\n\n//     th, td {\n//         border: 1px solid #ddd;\n//         padding: 8px;\n//         text-align: left;\n//     }\n\n//     th {\n//         background-color: #0000CD;\n//         color: white;\n//     }\n\n//     tr:nth-of-type(even) {\n//         background-color: #f2f2f2;\n//     }\n\n//     tr:hover {\n//         background-color: #ddd;\n//     }\n\n//     td {\n//         max-width: 150px;\n//         white-space: nowrap;\n//         overflow: hidden;\n//         text-overflow: ellipsis;\n//     }\n// `;\n\n// export default ManageBookings;\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { authAPI, endpoints } from '../../configs/APIs';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ReservationDetailsModal = ({ showModal, handleClose, selectedReservation, setSelectedReservation, handleUpdate, handleDelete }) => {\n    const [availableRooms, setAvailableRooms] = useState([]);\n\n    useEffect(() => {\n        const fetchRooms = async () => {\n            try {\n                const response = await authAPI().get('/rooms/');\n                setAvailableRooms(response.data);\n            } catch (error) {\n                console.error('There was an error fetching the rooms!', error);\n            }\n        };\n\n        fetchRooms();\n    }, []);\n\n    return (\n        <Modal show={showModal} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Chi tiết Đặt Phòng</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {selectedReservation && (\n                    <Form>\n                        <Form.Group controlId=\"formReservationId\">\n                            <Form.Label>ID</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={selectedReservation.id}\n                                readOnly\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formGuest\">\n                            <Form.Label>Khách</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={selectedReservation.guest?.username}\n                                readOnly\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formRoom\">\n                            <Form.Label>Phòng</Form.Label>\n                            <Form.Select\n                                value={selectedReservation.room[0]?.nameRoom || ''}\n                                onChange={(e) => setSelectedReservation(prev => ({\n                                    ...prev,\n                                    room: availableRooms.filter(room => room.nameRoom === e.target.value)\n                                }))}\n                            >\n                                <option value=\"\">Chọn phòng</option>\n                                {availableRooms.map(room => (\n                                    <option key={room.id} value={room.nameRoom}>\n                                        {room.nameRoom}\n                                    </option>\n                                ))}\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBookDate\">\n                            <Form.Label>Ngày đặt</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={selectedReservation.bookDate}\n                                onChange={(e) => setSelectedReservation(prev => ({ ...prev, bookDate: e.target.value }))}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formCheckin\">\n                            <Form.Label>Nhận phòng</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={selectedReservation.checkin}\n                                onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkin: e.target.value }))}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formCheckout\">\n                            <Form.Label>Trả phòng</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={selectedReservation.checkout}\n                                onChange={(e) => setSelectedReservation(prev => ({ ...prev, checkout: e.target.value }))}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formActive\">\n                            <Form.Label>Trạng thái đặt</Form.Label>\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={selectedReservation.statusCheckin}\n                                onChange={(e) => setSelectedReservation(prev => ({\n                                    ...prev,\n                                    statusCheckin: e.target.checked\n                                }))}\n                            />\n\n                        </Form.Group>\n                    </Form>\n                )}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Đóng\n                </Button>\n                <Button variant=\"danger\" onClick={handleDelete}>\n                    Xóa\n                </Button>\n                <Button variant=\"primary\" onClick={handleUpdate}>\n                    Sửa\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nconst ManageBookings = () => {\n    const [reservations, setReservations] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [selectedReservation, setSelectedReservation] = useState(null);\n\n    const handleShow = (reservation) => {\n        setSelectedReservation(reservation);\n        setShowModal(true);\n    };\n\n    const handleClose = () => setShowModal(false);\n\n    const handleUpdate = async () => {\n        if (!selectedReservation) return;\n    \n        const updatedReservation = {\n            ...selectedReservation,\n            guest: {\n                ...selectedReservation.guest,\n            },\n            room: selectedReservation.room.map(room => room.id),\n        };\n        \n        try {\n            console.log('Cập nhật:', updatedReservation);\n            const response1 = await authAPI().post(endpoints['update_reservation'](updatedReservation.id));\n            console.log('Cập nhật thành công:', response1.data);\n        \n            const response2 = await authAPI().get(endpoints['list_reservations']);\n            setReservations(response2.data);\n        } catch (error) {\n            console.error('Lỗi cập nhật:', error.response?.data || error.message);\n            // Ghi log chi tiết lỗi\n            if (error.response && error.response.data) {\n                console.log('Chi tiết lỗi từ API:', error.response.data);\n            }\n        } finally {\n            handleClose();\n        }\n        \n    };\n\n    const handleDelete = async () => {\n        if (!selectedReservation) return;\n    \n        // Hiển thị hộp thoại xác nhận\n        const confirmed = window.confirm('Bạn có chắc chắn muốn xóa phiếu đặt phòng này?');\n    \n        if (confirmed) {\n            try {\n                // Gọi API để vô hiệu hóa phiếu đặt phòng\n                await authAPI().patch(endpoints['deactivate_reservation'](selectedReservation.id));\n    \n                // Làm mới danh sách phiếu đặt phòng sau khi vô hiệu hóa\n                const response = await authAPI().get(endpoints['list_reservations']);\n                setReservations(response.data);\n            } catch (error) {\n                setError('Failed to deactivate reservation');\n            } finally {\n                handleClose();\n            }\n        }\n    };\n    \n\n    useEffect(() => {\n        const fetchReservations = async () => {\n            try {\n                const response = await authAPI().get(endpoints['list_reservations']);\n                setReservations(response.data);\n            } catch (err) {\n                setError('Failed to fetch reservations');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchReservations();\n\n    }, []);\n\n   \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>{error}</p>;\n\n    return (\n        <div css={styles}>\n            <h1>Lễ tân nhận phòng</h1>\n            <table css={tableStyles}>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Khách</th>\n                        <th>Phòng</th>\n                        <th>Ngày đặt</th>\n                        <th>Nhận phòng</th>\n                        <th>Trả phòng</th>\n                        <th>Trạng thái</th>\n                        <th>Hành động</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {reservations.map(reservation => (\n                        <tr key={reservation.id}>\n                            <td>{reservation.id}</td>\n                            <td>{reservation.guest?.username}</td>\n                            <td>{reservation.room.map(r => r.nameRoom).join(', ')}</td>\n                            <td>{reservation.bookDate}</td>\n                            <td>{reservation.checkin}</td>\n                            <td>{reservation.checkout}</td>\n                            <td>{reservation.statusCheckin ? 'Đã đặt' : 'Chưa đặt'}</td>\n                            <td>\n                                <Button variant=\"primary\" onClick={() => handleShow(reservation)}>Sửa</Button>\n                                {/* <Button variant=\"danger\" onClick={() => handleDelete(reservation)}>Xóa</Button> */}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <ReservationDetailsModal\n                showModal={showModal}\n                handleClose={handleClose}\n                selectedReservation={selectedReservation}\n                setSelectedReservation={setSelectedReservation}\n                handleUpdate={handleUpdate}\n                handleDelete={handleDelete}\n            />\n        </div>\n    );\n};\n\nconst styles = css`\n    padding-top: 120px;\n    background-color: #f4f4f4;\n    min-height: 100vh;\n\n    h1 {\n        color: #0000CD;\n        text-align: center;\n        margin-bottom: 20px;\n    }\n\n    p {\n        font-size: 16px;\n        text-align: center;\n    }\n`;\n\nconst tableStyles = css`\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n\n    th, td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #0000CD;\n        color: white;\n    }\n\n    tr:nth-of-type(even) {\n        background-color: #f2f2f2;\n    }\n\n    tr:hover {\n        background-color: #ddd;\n    }\n\n    td {\n        max-width: 150px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n`;\n\nexport default ManageBookings;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module"}