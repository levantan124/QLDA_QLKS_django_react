{"ast":null,"code":"import '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement, Fragment } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar EmotionCacheContext = /*#__PURE__*/createContext(\n// we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = /*#__PURE__*/createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n  return /*#__PURE__*/forwardRef(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' &&\n  // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n  var newProps = {};\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n  return newProps;\n};\nvar Noop = function Noop() {\n  return null;\n};\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n  var serialized = serializeStyles(registeredStyles);\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/createElement(type, newProps);\n  var possiblyStyleElement = /*#__PURE__*/createElement(Noop, null);\n  return /*#__PURE__*/createElement(Fragment, null, possiblyStyleElement, ele);\n}; // eslint-disable-next-line no-undef\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n  return render(cache, props, null, ref);\n});\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, createEmotionProps as c, hasOwnProperty as h, withEmotionCache as w };","map":{"version":3,"names":["createContext","forwardRef","createElement","Fragment","createCache","getRegisteredStyles","insertStyles","serializeStyles","hasOwnProperty","Object","prototype","EmotionCacheContext","HTMLElement","ThemeContext","CacheProvider","Provider","withEmotionCache","func","render","props","ref","Consumer","cache","sanitizeIdentifier","identifier","replace","typePropName","labelPropName","createEmotionProps","type","process","env","NODE_ENV","css","indexOf","Error","newProps","key","call","error","stack","match","Noop","theme","cssProp","registered","undefined","registeredStyles","className","serialized","name","labelFromStack","rules","ele","possiblyStyleElement","Emotion","displayName","C","E","T","c","h","w"],"sources":["/Users/ttc/Desktop/QLDA_QLKS_django_react/react-website/node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js"],"sourcesContent":["import '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement, Fragment } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /*#__PURE__*/createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = /*#__PURE__*/createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/forwardRef(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/createElement(type, newProps);\n  var possiblyStyleElement = /*#__PURE__*/createElement(Noop, null);\n\n\n  return /*#__PURE__*/createElement(Fragment, null, possiblyStyleElement, ele);\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, createEmotionProps as c, hasOwnProperty as h, withEmotionCache as w };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}