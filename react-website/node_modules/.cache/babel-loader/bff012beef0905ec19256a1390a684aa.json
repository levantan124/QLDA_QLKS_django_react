{"ast":null,"code":"import axios from \"axios\";\nimport cookie from \"react-cookies\";\nconst BASE_URL = \"http://192.168.1.113:8000\";\nexport const api = axios.create({\n  baseURL: \"http://192.168.1.113:8000\"\n});\nexport const getHeader = () => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  };\n};\nexport async function getAllEmployees() {\n  try {\n    const response = await api.get(\"/accounts/\");\n    // console.log(response.data)\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\nexport async function getEmployeeById(EmployeeId) {\n  try {\n    const result = await api.get(`/accounts/${EmployeeId}/`);\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error fetching room ${error.message}`);\n  }\n}\nexport const addEmployee = async (username, name, email, role, password, isActive, avatarUrl) => {\n  const data = {\n    username,\n    name,\n    email,\n    role,\n    password,\n    isActive,\n    avatar: avatarUrl\n  };\n  try {\n    const formData = new FormData();\n    formData.append(\"username\", username);\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"role\", role);\n    formData.append(\"password\", password);\n    if (avatarUrl) {\n      formData.append(\"avatar\", avatarUrl);\n    }\n    const response = await authAPI().post('/accounts/', formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding employee:\", error);\n\n    // Detailed error logging\n    if (error.response) {\n      console.error('Server responded with:', error.response.data);\n      console.error('Status code:', error.response.status);\n      console.error('Headers:', error.response.headers);\n    } else if (error.request) {\n      console.error('Request made but no response received:', error.request);\n    } else {\n      console.error('Error message:', error.message);\n    }\n    throw error; // Rethrow to handle it further up if necessary\n  }\n};\nexport async function deleteEmployee(AccId) {\n  const confirmed = window.confirm(\"Bạn có muốn xoá account này?\");\n  if (confirmed) {\n    try {\n      const result = await api.patch(`/accounts/${AccId}/delete-staff/`, {\n        // headers: getHeader()\n      });\n      return result.data;\n    } catch (error) {\n      throw new Error(`Error deleting room type ${error.message}`);\n    }\n  }\n}\nexport async function updateEmployee(roomTypeId, roomTypeData) {\n  // Nếu có ảnh mới, tải lên Cloudinary và lấy URL\n  let imageUrl = roomTypeData.image;\n  if (roomTypeData.image && typeof roomTypeData.image === 'object') {\n    const fullImageUrl = await uploadToCloudinary(roomTypeData.image);\n    imageUrl = fullImageUrl; // Chỉ lấy phần cần thiết của URL\n  }\n  const formData = new FormData();\n  formData.append(\"nameRoomType\", roomTypeData.nameRoomType);\n  formData.append(\"price\", roomTypeData.price);\n  formData.append(\"quantity\", roomTypeData.quantity);\n  formData.append(\"image\", imageUrl);\n  try {\n    console.log(...formData.entries());\n    const response = await axios.patch(`/roomtypes/${roomTypeId}/`, formData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating room type:', error);\n    throw error;\n  }\n}\nexport async function addRoom(nameRoom, roomType, status, active) {\n  const formData = new FormData();\n  formData.append(\"nameRoom\", nameRoom);\n  formData.append(\"roomType\", roomType); // Đây là tên của RoomType\n  try {\n    console.log(formData);\n    const response = await api.post(\"/rooms/\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (response.status === 201) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.error(\"Error in API call: \", error.response ? error.response.data : error.message);\n    return false;\n  }\n}\n\n/* This function gets all room types from thee database */\nexport async function getRoomTypes() {\n  try {\n    const response = await api.get(\"/roomtypes/\");\n    // console.log(response.data)\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\nexport const uploadToCloudinary = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"upload_preset\", \"roomtype\"); // Thay \"your_upload_preset\" bằng giá trị thực tế từ Cloudinary\n\n  try {\n    const response = await axios.post(\"https://api.cloudinary.com/v1_1/thanhlem/image/upload\", formData);\n    return response.data.secure_url; // URL của ảnh đã được tải lên\n  } catch (error) {\n    console.error(\"Error uploading to Cloudinary: \", error);\n    throw error;\n  }\n};\nexport async function addRoomType(nameRoomType, price, quantity, imageUrl) {\n  const data = {\n    nameRoomType,\n    price,\n    quantity,\n    image: imageUrl\n  };\n  try {\n    const response = await axios.post(\"/roomtypes/\", data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (response.status === 201) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    console.error(\"Error in API call: \", error.response ? error.response.data : error.message);\n    return false;\n  }\n}\nexport async function getRoomTypeById(roomTypeId) {\n  try {\n    const result = await api.get(`/roomtypes/${roomTypeId}/`);\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error fetching room ${error.message}`);\n  }\n}\nexport async function updateRoomType(roomTypeId, roomTypeData) {\n  // Nếu có ảnh mới, tải lên Cloudinary và lấy URL\n  let imageUrl = roomTypeData.image;\n  if (roomTypeData.image && typeof roomTypeData.image === 'object') {\n    const fullImageUrl = await uploadToCloudinary(roomTypeData.image);\n    imageUrl = fullImageUrl; // Chỉ lấy phần cần thiết của URL\n  }\n  const formData = new FormData();\n  formData.append(\"nameRoomType\", roomTypeData.nameRoomType);\n  formData.append(\"price\", roomTypeData.price);\n  formData.append(\"quantity\", roomTypeData.quantity);\n  formData.append(\"image\", imageUrl);\n  try {\n    console.log(...formData.entries());\n    const response = await axios.patch(`/roomtypes/${roomTypeId}/`, formData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating room type:', error);\n    throw error;\n  }\n}\n\n/* This function deletes a roomtype by the Id */\nexport async function deleteRoomType(roomTypeId) {\n  const confirmed = window.confirm(\"Bạn có muốn xoá loại phòng này?\");\n  if (confirmed) {\n    try {\n      const result = await api.patch(`/roomtypes/${roomTypeId}/delete-roomTypes/`, {\n        // headers: getHeader()\n      });\n      return result.data;\n    } catch (error) {\n      throw new Error(`Error deleting room type ${error.message}`);\n    }\n  }\n}\n\n/* This function gets all rooms from the database */\nexport async function getAllRooms() {\n  try {\n    const result = await api.get(\"/rooms/\");\n    return result.data;\n  } catch (error) {\n    throw new Error(\"Error fetching rooms\");\n  }\n}\n\n/* This function deletes a room by the Id */\nexport async function deleteRoom(roomId) {\n  const confirmed = window.confirm(\"Bạn có muốn xoá phòng này?\");\n  if (confirmed) {\n    try {\n      const result = await api.patch(`/rooms/${roomId}/delete-room/`, {\n        // headers: getHeader()\n      });\n      return result.data;\n    } catch (error) {\n      throw new Error(`Error deleting room type ${error.message}`);\n    }\n  }\n}\n\n/* This function update a room */\nexport async function updateRoom(roomId, roomData) {\n  const formData = new FormData();\n  formData.append(\"nameRoom\", roomData.nameRoom);\n  formData.append(\"roomType\", roomData.roomType);\n  formData.append(\"status\", roomData.status);\n  try {\n    const response = await api.patch(`/rooms/${roomId}/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating room:', error);\n    throw error;\n  }\n}\n\n/* This function gets a room by Id*/\nexport async function getRoomById(roomId) {\n  try {\n    const result = await api.get(`/rooms/${roomId}/`);\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error fetching room ${error.message}`);\n  }\n}\n\n/* This function saves a new booking to the database */\nexport async function bookRoom(roomId, booking) {\n  try {\n    const response = await api.post(`/bookings/room/${roomId}/booking`, booking);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data) {\n      throw new Error(error.response.data);\n    } else {\n      throw new Error(`Error booking room : ${error.message}`);\n    }\n  }\n}\n\n/* This function gets alll bokings from the database */\nexport async function getAllBookings() {\n  try {\n    const result = await api.get(\"/reservations/\", {\n      // headers: getHeader()\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error fetching bookings : ${error.message}`);\n  }\n}\n\n/* This function get booking by the cnfirmation code */\nexport async function getBookingById(id) {\n  try {\n    const result = await api.get(`/reservations/${id}/`);\n    return result.data;\n  } catch (error) {\n    if (error.response && error.response.data) {\n      throw new Error(error.response.data);\n    } else {\n      throw new Error(`Error find booking : ${error.message}`);\n    }\n  }\n}\n\n/* This function get booking by the cnfirmation code */\nexport async function getBookingByConfirmationCode(confirmationCode) {\n  try {\n    const result = await api.get(`/bookings/confirmation/${confirmationCode}`);\n    return result.data;\n  } catch (error) {\n    if (error.response && error.response.data) {\n      throw new Error(error.response.data);\n    } else {\n      throw new Error(`Error find booking : ${error.message}`);\n    }\n  }\n}\n\n/* This is the function to cancel user booking */\nexport async function cancelBooking(bookingId) {\n  const confirmed = window.confirm(\"Bạn có muốn xoá phiếu đặt phòng này?\");\n  if (!confirmed) {\n    // Nếu người dùng không xác nhận, không thực hiện việc hủy đặt phòng\n    return;\n  }\n  try {\n    const result = await api.patch(`/reservations/${bookingId}/cancel-reservation/`);\n    return result.data;\n  } catch (error) {\n    throw new Error(`Error cancelling booking :${error.message}`);\n  }\n}\n\n/* This function gets all availavle rooms from the database with a given date and a room type */\nexport async function getAvailableRooms(checkInDate, checkOutDate, roomType) {\n  const result = await api.get(`rooms/available-rooms?checkInDate=${checkInDate}\n\t\t&checkOutDate=${checkOutDate}&roomType=${roomType}`);\n  return result;\n}\n\n/* This function register a new user */\nexport async function registerUser(registration) {\n  try {\n    const response = await api.post(\"/auth/register-user\", registration);\n    return response.data;\n  } catch (error) {\n    if (error.reeponse && error.response.data) {\n      throw new Error(error.response.data);\n    } else {\n      throw new Error(`User registration error : ${error.message}`);\n    }\n  }\n}\n\n// export const authAPI = () => {\n// \tconst token = cookie.load('token');\n// \treturn axios.create({\n// \t\tbaseURL: \"http://127.0.0.1:8000\",\n// \t\theaders: {\n// \t\t\t'Authorization': `Bearer ${token}`\n// \t\t}\n// \t});\n// }\n// Hàm tạo instance axios với Authorization header\nexport const authAPI = () => {\n  const token = cookie.load('token');\n  return axios.create({\n    baseURL: BASE_URL,\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      \"Content-Type\": `Application/json`\n    }\n  });\n};\n/* This function login a registered user */\nexport async function loginUser(username, password) {\n  try {\n    // const response = await api.post(\"/auth/login\", login)\n    const response = await api.post(\"/o/token/\", {\n      'username': username,\n      'password': password,\n      'client_id': \"E1WxCUm9YFWU6Y7QPQ2RAYtua7zfmn2uH8NOYfUy\",\n      'client_secret': \"zJAi6vKX52hvUrldWC14n9JkXUQ3EssgHnLMQNCDoQbAg8B3PsWJPM39ph58bHG5Jq2JYCCEUEvEL7zVWuJB0gIkCDc999OBtykWEc7UsVs6SVIpaoM5bBAD9g4i77T8\",\n      'grant_type': \"password\"\n    }, {\n      headers: {\n        'Content-type': 'muiltipart/formdata'\n      }\n    });\n    if (response.status >= 200 && response.status < 300) {\n      return response.data;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\n/*  This is function to get the user profile */\nexport async function getUserProfile(userId, token) {\n  try {\n    const response = await api.get(`users/profile/${userId}`, {\n      headers: getHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n/* This isthe function to delete a user */\nexport async function deleteUser(userId) {\n  try {\n    const response = await api.delete(`/users/delete/${userId}`, {\n      headers: getHeader()\n    });\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n}\n\n/* This is the function to get a single user */\nexport async function getUser(userId, token) {\n  try {\n    const response = await api.get(`/users/${userId}`, {\n      headers: getHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\n/* This is the function to get user bookings by the user id */\nexport async function getBookingsByUserId(userId, token) {\n  try {\n    const response = await api.get(`/bookings/user/${userId}/bookings`, {\n      headers: getHeader()\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching bookings:\", error.message);\n    throw new Error(\"Failed to fetch bookings\");\n  }\n}","map":{"version":3,"names":["axios","cookie","BASE_URL","api","create","baseURL","getHeader","token","localStorage","getItem","Authorization","getAllEmployees","response","get","data","error","Error","getEmployeeById","EmployeeId","result","message","addEmployee","username","name","email","role","password","isActive","avatarUrl","avatar","formData","FormData","append","authAPI","post","headers","console","status","request","deleteEmployee","AccId","confirmed","window","confirm","patch","updateEmployee","roomTypeId","roomTypeData","imageUrl","image","fullImageUrl","uploadToCloudinary","nameRoomType","price","quantity","log","entries","addRoom","nameRoom","roomType","active","getRoomTypes","file","secure_url","addRoomType","getRoomTypeById","updateRoomType","deleteRoomType","getAllRooms","deleteRoom","roomId","updateRoom","roomData","getRoomById","bookRoom","booking","getAllBookings","getBookingById","id","getBookingByConfirmationCode","confirmationCode","cancelBooking","bookingId","getAvailableRooms","checkInDate","checkOutDate","registerUser","registration","reeponse","load","loginUser","getUserProfile","userId","deleteUser","delete","getUser","getBookingsByUserId"],"sources":["D:/WebsiteQLKS_Django_React/react-website/src/components/utils/ApiFunctions.js"],"sourcesContent":["import axios from \"axios\"\nimport cookie from \"react-cookies\"\n\nconst BASE_URL = \"http://192.168.1.113:8000\"\nexport const api = axios.create({\n\tbaseURL: \"http://192.168.1.113:8000\"\n})\n\nexport const getHeader = () => {\n\tconst token = localStorage.getItem(\"token\")\n\treturn {\n\t\tAuthorization: `Bearer ${token}`,\n\t\t\"Content-Type\": \"application/json\"\n\t}\n}\n\nexport async function getAllEmployees() {\n\ttry {\n\t\tconst response = await api.get(\"/accounts/\")\n\t\t// console.log(response.data)\n\t\treturn response.data\n\t} catch (error) {\n\t\tthrow new Error(error)\n\t}\n}\n\nexport async function getEmployeeById(EmployeeId) {\n\ttry {\n\t\tconst result = await api.get(`/accounts/${EmployeeId}/`)\n\t\treturn result.data\n\t} catch (error) {\n\t\tthrow new Error(`Error fetching room ${error.message}`)\n\t}\n}\n\nexport const addEmployee = async (username, name, email, role, password, isActive, avatarUrl) => {\n\tconst data = {\n\t\tusername, \n\t\tname, \n\t\temail, \n\t\trole,\n\t\tpassword, \n\t\tisActive, avatar: avatarUrl\n    };\n\t\n\ttry {\n\t  const formData = new FormData();\n\t  formData.append(\"username\", username);\n\t  formData.append(\"name\", name);\n\t  formData.append(\"email\", email);\n\t  formData.append(\"role\", role);\n\t  formData.append(\"password\", password);\n\t  if (avatarUrl) {\n\t\tformData.append(\"avatar\", avatarUrl);\n\t  }\n  \n\t  const response = await authAPI().post('/accounts/', formData, {\n\t\theaders: {\n\t\t  \"Content-Type\": \"multipart/form-data\",\n\t\t},\n\t  });\n  \n\t  return response.data;\n\t} catch (error) {\n\t  console.error(\"Error adding employee:\", error);\n  \n\t  // Detailed error logging\n\t  if (error.response) {\n\t\tconsole.error('Server responded with:', error.response.data);\n\t\tconsole.error('Status code:', error.response.status);\n\t\tconsole.error('Headers:', error.response.headers);\n\t  } else if (error.request) {\n\t\tconsole.error('Request made but no response received:', error.request);\n\t  } else {\n\t\tconsole.error('Error message:', error.message);\n\t  }\n  \n\t  throw error; // Rethrow to handle it further up if necessary\n\t}\n  };\n\n\nexport async function deleteEmployee(AccId) {\n\tconst confirmed = window.confirm(\"Bạn có muốn xoá account này?\")\n\tif(confirmed){\n\t\ttry {\n\t\t\tconst result = await api.patch(`/accounts/${AccId}/delete-staff/`, {\n\t\t\t\t// headers: getHeader()\n\t\t\t})\n\t\t\treturn result.data\n\t\t} catch (error) {\n\t\t\tthrow new Error(`Error deleting room type ${error.message}`)\n\t\t}\n\t}\n}\n\nexport async function updateEmployee(roomTypeId, roomTypeData) {\n    // Nếu có ảnh mới, tải lên Cloudinary và lấy URL\n    let imageUrl = roomTypeData.image;\n    if (roomTypeData.image && typeof roomTypeData.image === 'object') {\n        const fullImageUrl = await uploadToCloudinary(roomTypeData.image);\n        imageUrl = fullImageUrl; // Chỉ lấy phần cần thiết của URL\n    }\n\n\tconst formData = new FormData();\n    formData.append(\"nameRoomType\", roomTypeData.nameRoomType);\n    formData.append(\"price\", roomTypeData.price);\n    formData.append(\"quantity\", roomTypeData.quantity);\n\tformData.append(\"image\", imageUrl);\n\n    try {\n\t\tconsole.log(...formData.entries());\n        const response = await axios.patch(`/roomtypes/${roomTypeId}/`, formData, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error updating room type:', error);\n        throw error;\n    }\n}\n\nexport async function addRoom(nameRoom, roomType, status, active) {\n    const formData = new FormData();\n    formData.append(\"nameRoom\", nameRoom);\n    formData.append(\"roomType\", roomType); // Đây là tên của RoomType\n\ttry {\n\t\tconsole.log(formData);\n\t\tconst response = await api.post(\"/rooms/\", formData, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t}\n\t\t});\n\t\tif (response.status === 201) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Error in API call: \", error.response ? error.response.data : error.message);\n\t\treturn false;\n\t}\n}\n\n\n/* This function gets all room types from thee database */\nexport async function getRoomTypes() {\n\ttry {\n\t\tconst response = await api.get(\"/roomtypes/\")\n\t\t// console.log(response.data)\n\t\treturn response.data\n\t} catch (error) {\n\t\tthrow new Error(error)\n\t}\n}\n\nexport const uploadToCloudinary = async (file) => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"roomtype\"); // Thay \"your_upload_preset\" bằng giá trị thực tế từ Cloudinary\n\n    try {\n        const response = await axios.post(\"https://api.cloudinary.com/v1_1/thanhlem/image/upload\", formData);\n        return response.data.secure_url; // URL của ảnh đã được tải lên\n    } catch (error) {\n        console.error(\"Error uploading to Cloudinary: \", error);\n        throw error;\n    }\n};\n\nexport async function addRoomType(nameRoomType, price, quantity, imageUrl) {\n\tconst data = {\n        nameRoomType,\n        price,\n        quantity,\n        image: imageUrl\n    };\n   \n\ttry {\n\t\tconst response = await axios.post(\"/roomtypes/\", data, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t}\n\t\t});\n\t\t\n\t\tif (response.status === 201) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Error in API call: \", error.response ? error.response.data : error.message);\n\t\treturn false;\n\t}\n}\n\nexport async function getRoomTypeById(roomTypeId) {\n\ttry {\n\t\tconst result = await api.get(`/roomtypes/${roomTypeId}/`)\n\t\treturn result.data\n\t} catch (error) {\n\t\tthrow new Error(`Error fetching room ${error.message}`)\n\t}\n}\n\nexport async function updateRoomType(roomTypeId, roomTypeData) {\n    // Nếu có ảnh mới, tải lên Cloudinary và lấy URL\n    let imageUrl = roomTypeData.image;\n    if (roomTypeData.image && typeof roomTypeData.image === 'object') {\n        const fullImageUrl = await uploadToCloudinary(roomTypeData.image);\n        imageUrl = fullImageUrl; // Chỉ lấy phần cần thiết của URL\n    }\n\n\tconst formData = new FormData();\n    formData.append(\"nameRoomType\", roomTypeData.nameRoomType);\n    formData.append(\"price\", roomTypeData.price);\n    formData.append(\"quantity\", roomTypeData.quantity);\n\tformData.append(\"image\", imageUrl);\n\n    try {\n\t\tconsole.log(...formData.entries());\n        const response = await axios.patch(`/roomtypes/${roomTypeId}/`, formData, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error updating room type:', error);\n        throw error;\n    }\n}\n\n/* This function deletes a roomtype by the Id */\nexport async function deleteRoomType(roomTypeId) {\n\tconst confirmed = window.confirm(\"Bạn có muốn xoá loại phòng này?\")\n\tif(confirmed){\n\t\ttry {\n\t\t\tconst result = await api.patch(`/roomtypes/${roomTypeId}/delete-roomTypes/`, {\n\t\t\t\t// headers: getHeader()\n\t\t\t})\n\t\t\treturn result.data\n\t\t} catch (error) {\n\t\t\tthrow new Error(`Error deleting room type ${error.message}`)\n\t\t}\n\t}\n}\n\n/* This function gets all rooms from the database */\nexport async function getAllRooms() {\n\ttry {\n\t\tconst result = await api.get(\"/rooms/\")\n\t\treturn result.data\n\t} catch (error) {\n\t\tthrow new Error(\"Error fetching rooms\")\n\t}\n}\n\n/* This function deletes a room by the Id */\nexport async function deleteRoom(roomId) {\n\tconst confirmed = window.confirm(\"Bạn có muốn xoá phòng này?\")\n\tif(confirmed){\n\t\ttry {\n\t\t\tconst result = await api.patch(`/rooms/${roomId}/delete-room/`, {\n\t\t\t\t// headers: getHeader()\n\t\t\t})\n\t\t\treturn result.data\n\t\t} catch (error) {\n\t\t\tthrow new Error(`Error deleting room type ${error.message}`)\n\t\t}\n\t}\n}\n\n/* This function update a room */\nexport async function updateRoom(roomId, roomData) {\n    const formData = new FormData();\n    formData.append(\"nameRoom\", roomData.nameRoom);\n    formData.append(\"roomType\", roomData.roomType);\n    formData.append(\"status\", roomData.status);\n\n    try {\n        const response = await api.patch(`/rooms/${roomId}/`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error updating room:', error);\n        throw error;\n    }\n}\n\n\n/* This function gets a room by Id*/\nexport async function getRoomById(roomId) {\n\ttry {\n\t\tconst result = await api.get(`/rooms/${roomId}/`)\n\t\treturn result.data\n\t} catch (error) {\n\t\tthrow new Error(`Error fetching room ${error.message}`)\n\t}\n}\n\n/* This function saves a new booking to the database */\nexport async function bookRoom(roomId, booking) {\n\ttry {\n\t\tconst response = await api.post(`/bookings/room/${roomId}/booking`, booking)\n\t\treturn response.data\n\t} catch (error) {\n\t\tif (error.response && error.response.data) {\n\t\t\tthrow new Error(error.response.data)\n\t\t} else {\n\t\t\tthrow new Error(`Error booking room : ${error.message}`)\n\t\t}\n\t}\n}\n\n/* This function gets alll bokings from the database */\nexport async function getAllBookings() {\n\ttry {\n\t\tconst result = await api.get(\"/reservations/\", {\n\t\t\t// headers: getHeader()\n\t\t})\n\t\treturn result.data\n\t} catch (error) {\n\t\tthrow new Error(`Error fetching bookings : ${error.message}`)\n\t}\n}\n\n/* This function get booking by the cnfirmation code */\nexport async function getBookingById(id) {\n\ttry {\n\t\tconst result = await api.get(`/reservations/${id}/`)\n\t\treturn result.data\n\t} catch (error) {\n\t\tif (error.response && error.response.data) {\n\t\t\tthrow new Error(error.response.data)\n\t\t} else {\n\t\t\tthrow new Error(`Error find booking : ${error.message}`)\n\t\t}\n\t}\n}\n\n\n/* This function get booking by the cnfirmation code */\nexport async function getBookingByConfirmationCode(confirmationCode) {\n\ttry {\n\t\tconst result = await api.get(`/bookings/confirmation/${confirmationCode}`)\n\t\treturn result.data\n\t} catch (error) {\n\t\tif (error.response && error.response.data) {\n\t\t\tthrow new Error(error.response.data)\n\t\t} else {\n\t\t\tthrow new Error(`Error find booking : ${error.message}`)\n\t\t}\n\t}\n}\n\n/* This is the function to cancel user booking */\nexport async function cancelBooking(bookingId) {\n\tconst confirmed = window.confirm(\"Bạn có muốn xoá phiếu đặt phòng này?\")\n\tif (!confirmed) {\n        // Nếu người dùng không xác nhận, không thực hiện việc hủy đặt phòng\n        return;\n    }\n\ttry {\n\t\tconst result = await api.patch(`/reservations/${bookingId}/cancel-reservation/`)\n\t\treturn result.data\n\t} catch (error) {\n\t\tthrow new Error(`Error cancelling booking :${error.message}`)\n\t}\n}\n\n/* This function gets all availavle rooms from the database with a given date and a room type */\nexport async function getAvailableRooms(checkInDate, checkOutDate, roomType) {\n\tconst result = await api.get(\n\t\t`rooms/available-rooms?checkInDate=${checkInDate}\n\t\t&checkOutDate=${checkOutDate}&roomType=${roomType}`\n\t)\n\treturn result\n}\n\n/* This function register a new user */\nexport async function registerUser(registration) {\n\ttry {\n\t\tconst response = await api.post(\"/auth/register-user\", registration)\n\t\treturn response.data\n\t} catch (error) {\n\t\tif (error.reeponse && error.response.data) {\n\t\t\tthrow new Error(error.response.data)\n\t\t} else {\n\t\t\tthrow new Error(`User registration error : ${error.message}`)\n\t\t}\n\t}\n}\n\n// export const authAPI = () => {\n// \tconst token = cookie.load('token');\n// \treturn axios.create({\n// \t\tbaseURL: \"http://127.0.0.1:8000\",\n// \t\theaders: {\n// \t\t\t'Authorization': `Bearer ${token}`\n// \t\t}\n// \t});\n// }\n// Hàm tạo instance axios với Authorization header\nexport const authAPI = () => {\n    const token = cookie.load('token');\n    return axios.create({\n        baseURL: BASE_URL,\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            \"Content-Type\": `Application/json`\n        }\n    });\n};\n/* This function login a registered user */\nexport async function loginUser(username, password) {\n\ttry {\n\t\t// const response = await api.post(\"/auth/login\", login)\n\t\tconst response = await api.post(\"/o/token/\", {\n\t\t\t'username':username,\n\t\t\t'password':password, \n\t\t\t'client_id':\"E1WxCUm9YFWU6Y7QPQ2RAYtua7zfmn2uH8NOYfUy\", \n\t\t\t'client_secret': \"zJAi6vKX52hvUrldWC14n9JkXUQ3EssgHnLMQNCDoQbAg8B3PsWJPM39ph58bHG5Jq2JYCCEUEvEL7zVWuJB0gIkCDc999OBtykWEc7UsVs6SVIpaoM5bBAD9g4i77T8\",\n\t\t\t'grant_type': \"password\",\n\t\t},{\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'muiltipart/formdata'\n\t\t\t}\n\t\t});\n\t\tif (response.status >= 200 && response.status < 300) {\n\t\t\treturn response.data\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\treturn null\n\t}\n}\n\n/*  This is function to get the user profile */\nexport async function getUserProfile(userId, token) {\n\ttry {\n\t\tconst response = await api.get(`users/profile/${userId}`, {\n\t\t\theaders: getHeader()\n\t\t})\n\t\treturn response.data\n\t} catch (error) {\n\t\tthrow error\n\t}\n}\n\n/* This isthe function to delete a user */\nexport async function deleteUser(userId) {\n\ttry {\n\t\tconst response = await api.delete(`/users/delete/${userId}`, {\n\t\t\theaders: getHeader()\n\t\t})\n\t\treturn response.data\n\t} catch (error) {\n\t\treturn error.message\n\t}\n}\n\n/* This is the function to get a single user */\nexport async function getUser(userId, token) {\n\ttry {\n\t\tconst response = await api.get(`/users/${userId}`, {\n\t\t\theaders: getHeader()\n\t\t})\n\t\treturn response.data\n\t} catch (error) {\n\t\tthrow error\n\t}\n}\n\n/* This is the function to get user bookings by the user id */\nexport async function getBookingsByUserId(userId, token) {\n\ttry {\n\t\tconst response = await api.get(`/bookings/user/${userId}/bookings`, {\n\t\t\theaders: getHeader()\n\t\t})\n\t\treturn response.data\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching bookings:\", error.message)\n\t\tthrow new Error(\"Failed to fetch bookings\")\n\t}\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}