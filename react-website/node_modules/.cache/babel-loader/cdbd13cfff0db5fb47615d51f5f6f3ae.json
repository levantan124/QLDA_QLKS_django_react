{"ast":null,"code":"/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\nvar StyleSheet = /*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n  var _proto = StyleSheet.prototype;\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n      var before;\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n    var tag = this.tags[this.tags.length - 1];\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule,\n        // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n    this.ctr++;\n  };\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n  return StyleSheet;\n}();\nexport { StyleSheet };","map":{"version":3,"names":["sheetForTag","tag","sheet","i","document","styleSheets","length","ownerNode","createStyleElement","options","createElement","setAttribute","key","nonce","undefined","appendChild","createTextNode","StyleSheet","isSpeedy","speedy","process","env","NODE_ENV","tags","ctr","container","before","_proto","prototype","insert","rule","_tag","nextSibling","insertBefore","push","isImportRule","charCodeAt","insertRule","cssRules","e","console","warn","flush","forEach","parentNode","removeChild"],"sources":["/Users/ttc/Desktop/QLDA_QLKS_django_react/react-website/node_modules/@emotion/sheet/dist/sheet.browser.esm.js"],"sourcesContent":["/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}