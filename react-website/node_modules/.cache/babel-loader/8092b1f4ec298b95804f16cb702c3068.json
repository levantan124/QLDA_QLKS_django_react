{"ast":null,"code":"// /** @jsx jsx */\n// import { css, jsx } from '@emotion/react';\n// import { useState, useEffect } from 'react';\n// import Container from '../Global/Container';\n// import { authAPI, endpoints } from '../../configs/APIs';\n// import { SnackbarProvider, useSnackbar } from 'notistack';\n// import { Card, CardBody, CardTitle, CardText, Row, Col } from 'reactstrap';\n\n// const AddService = () => {\n//     const [nameService, setNameService] = useState('');\n//     const [price, setPrice] = useState(0);\n//     const [quantity, setQuantity] = useState(1);\n//     const [reservations, setReservations] = useState([]);\n//     const [services, setServices] = useState([]);\n//     const [selectedReservation, setSelectedReservation] = useState('');\n//     const [selectedService, setSelectedService] = useState('');\n//     const [error, setError] = useState('');\n//     const [loadingReservations, setLoadingReservations] = useState(true);\n//     const [loadingServices, setLoadingServices] = useState(true);\n//     const [serviceList, setServiceList] = useState([]);\n\n//     const { enqueueSnackbar } = useSnackbar();\n\n//     useEffect(() => {\n//         const fetchReservations = async () => {\n//             try {\n//                 const response = await authAPI().get(endpoints['reservations']);\n//                 setReservations(response.data);\n//             } catch (err) {\n//                 setError('Failed to fetch reservations');\n//             } finally {\n//                 setLoadingReservations(false);\n//             }\n//         };\n\n//         fetchReservations();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchServices = async () => {\n//             try {\n//                 const response = await authAPI().get(endpoints['services']);\n//                 setServices(response.data);\n//             } catch (err) {\n//                 setError('Failed to fetch services');\n//             } finally {\n//                 setLoadingServices(false);\n//             }\n//         };\n\n//         fetchServices();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchServiceList = async () => {\n//             try {\n//                 const response = await authAPI().get(endpoints['reservation_service']);\n//                 setServiceList(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching service list:', error);\n//             }\n//         };\n\n//         fetchServiceList();\n//     }, []);\n\n//     const handleServiceChange = (e) => {\n//         const selectedServiceId = e.target.value;\n//         const selectedService = services.find(service => service.id === parseInt(selectedServiceId));\n//         setSelectedService(selectedServiceId);\n//         if (selectedService) {\n//             setNameService(selectedService.nameService);\n//             setPrice(selectedService.price);\n//         }\n//     };\n\n//     const handleQuantityChange = (e) => {\n//         const newQuantity = parseInt(e.target.value);\n//         if (newQuantity > 0) {\n//             setQuantity(newQuantity);\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         if (!selectedReservation || !selectedService) {\n//             enqueueSnackbar('Vui lòng chọn phiếu đặt phòng và dịch vụ', { variant: 'warning' });\n//             return;\n//         }\n\n//         const serviceData = {\n//             reservation: selectedReservation,\n//             service: selectedService,\n//             quantity,\n//         };\n\n//         try {\n//             const response = await authAPI().post(endpoints['reservation_service'], serviceData);\n//             if (response.status === 201) {\n//                 enqueueSnackbar('Dịch vụ đã được thêm thành công', { variant: 'success' });\n//                 setNameService('');\n//                 setPrice(0);\n//                 setQuantity(1);\n//                 setSelectedReservation('');\n//                 setSelectedService('');\n\n//                 // Refresh service list after adding a new service\n//                 const updatedServiceList = await authAPI().get(endpoints['reservation_service']);\n//                 setServiceList(updatedServiceList.data);\n//             } else {\n//                 enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\n//             }\n//         } catch (error) {\n//             console.error('Error adding service:', error);\n//             enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\n//         }\n//     };\n\n//     const formatCurrency = (amount) => {\n//         return new Intl.NumberFormat('vi-VN', {\n//             style: 'currency',\n//             currency: 'VND'\n//         }).format(amount);\n//     };\n\n//     const groupedServices = serviceList.reduce((acc, service) => {\n//         const key = `${service.guest_name} - Phòng: ${service.room_names}`;\n//         if (!acc[key]) {\n//             acc[key] = [];\n//         }\n//         acc[key].push(service);\n//         return acc;\n//     }, {});\n\n//     return (\n//         <Container>\n//             <div css={styles}>\n//                 <h1>Thêm dịch vụ</h1>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                         <label>Tên dịch vụ</label>\n//                         {loadingServices ? (\n//                             <p>Loading services...</p>\n//                         ) : (\n//                             <select\n//                                 value={selectedService}\n//                                 onChange={handleServiceChange}\n//                                 required\n//                             >\n//                                 <option value=\"\">Chọn dịch vụ</option>\n//                                 {services.map((service) => (\n//                                     <option key={service.id} value={service.id}>\n//                                         {service.nameService} - Giá: {formatCurrency(service.price)}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         )}\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label>Số lượng</label>\n//                         <input\n//                             type=\"number\"\n//                             value={quantity}\n//                             onChange={handleQuantityChange}\n//                             required\n//                             min=\"1\"\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label>Tổng phí dịch vụ</label>\n//                         <input\n//                             type=\"text\"\n//                             value={formatCurrency(price * quantity)}\n//                             readOnly\n//                         />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                         <label>Chọn phiếu đặt phòng</label>\n//                         {loadingReservations ? (\n//                             <p>Loading reservations...</p>\n//                         ) : (\n//                             <select\n//                                 value={selectedReservation}\n//                                 onChange={(e) => setSelectedReservation(e.target.value)}\n//                                 required\n//                             >\n//                                 <option value=\"\">Chọn phiếu</option>\n//                                 {reservations.map((reservation) => (\n//                                     <option key={reservation.id} value={reservation.id}>\n//                                         {reservation.guest.name} - {reservation.room.map(r => r.nameRoom).join(', ')}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         )}\n//                     </div>\n//                     <button type=\"submit\">Thêm dịch vụ</button>\n//                 </form>\n//                 <div css={listStyles}>\n//                     <h1>Danh sách phiếu đặt phòng</h1>\n//                     {Object.entries(groupedServices).map(([key, services]) => (\n//                         <div key={key} css={groupStyle}>\n//                             <h2 css={groupTitleStyle}>{key}</h2>\n//                             <Row>\n//                                 {services.map((service, index) => (\n//                                     <Col key={index} sm=\"12\" md=\"6\" lg=\"4\">\n//                                         <Card css={cardStyle}>\n//                                             <CardBody>\n//                                                 <CardTitle tag=\"h5\" css={cardTitleStyle}>{service.service_name}</CardTitle>\n//                                                 <CardText css={cardTextStyle}>\n//                                                     Dịch vụ: {service.nameService} <br />\n//                                                     Giá: {service.price.toLocaleString()} VND<br />\n//                                                     Số lượng: {service.quantity}\n//                                                 </CardText>\n//                                             </CardBody>\n//                                         </Card>\n//                                     </Col>\n//                                 ))}\n//                             </Row>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//         </Container>\n//     );\n// };\n\n// const styles = css`\n//     padding: 120px;\n//     background-color: #f9f9f9;\n//     h1 {\n//         margin-bottom: 20px;\n//     }\n//     .form-group {\n//         margin-bottom: 15px;\n//         label {\n//             display: block;\n//             margin-bottom: 5px;\n//         }\n//         input, select {\n//             width: 100%;\n//             padding: 8px;\n//             box-sizing: border-box;\n//         }\n//     }\n//     button {\n//         padding: 10px 20px;\n//         background-color: #0000cd;\n//         color: #fff;\n//         border: none;\n//         cursor: pointer;\n//         &:hover {\n//             background-color: #00008b;\n//         }\n//     }\n//     p {\n//         margin-top: 15px;\n//         color: #ff1414;\n//     }\n// `;\n\n// const listStyles = css`\n//     padding: 20px;\n//     background-color: #f9f9f9;\n//     h1 {\n//         margin-bottom: 20px;\n//         text-align: center;\n//     }\n// `;\n\n// const groupStyle = css`\n//     margin-bottom: 20px;\n//     padding: 10px;\n//     background-color: #fff;\n//     border-radius: 8px;\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n// `;\n\n// const groupTitleStyle = css`\n//     font-size: 1.25rem;\n//     color: #343a40;\n//     margin-bottom: 10px;\n// `;\n\n// const cardStyle = css`\n//     margin-bottom: 10px;\n//     border: 1px solid #ddd;\n//     border-radius: 8px;\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n//     transition: transform 0.3s ease;\n//     &:hover {\n//         transform: scale(1.05);\n//     }\n// `;\n\n// const cardTitleStyle = css`\n//     font-size: 1rem;\n//     color: #007bff;\n// `;\n\n// const cardTextStyle = css`\n//     font-size: 0.875rem;\n//     color: #343a40;\n// `;\n\n// export default AddService;","map":{"version":3,"names":[],"sources":["D:/WebsiteQLKS_Django_React/react-website/src/components/Staff/AddService.js"],"sourcesContent":["// /** @jsx jsx */\r\n// import { css, jsx } from '@emotion/react';\r\n// import { useState, useEffect } from 'react';\r\n// import Container from '../Global/Container';\r\n// import { authAPI, endpoints } from '../../configs/APIs';\r\n// import { SnackbarProvider, useSnackbar } from 'notistack';\r\n// import { Card, CardBody, CardTitle, CardText, Row, Col } from 'reactstrap';\r\n\r\n// const AddService = () => {\r\n//     const [nameService, setNameService] = useState('');\r\n//     const [price, setPrice] = useState(0);\r\n//     const [quantity, setQuantity] = useState(1);\r\n//     const [reservations, setReservations] = useState([]);\r\n//     const [services, setServices] = useState([]);\r\n//     const [selectedReservation, setSelectedReservation] = useState('');\r\n//     const [selectedService, setSelectedService] = useState('');\r\n//     const [error, setError] = useState('');\r\n//     const [loadingReservations, setLoadingReservations] = useState(true);\r\n//     const [loadingServices, setLoadingServices] = useState(true);\r\n//     const [serviceList, setServiceList] = useState([]);\r\n\r\n//     const { enqueueSnackbar } = useSnackbar();\r\n\r\n//     useEffect(() => {\r\n//         const fetchReservations = async () => {\r\n//             try {\r\n//                 const response = await authAPI().get(endpoints['reservations']);\r\n//                 setReservations(response.data);\r\n//             } catch (err) {\r\n//                 setError('Failed to fetch reservations');\r\n//             } finally {\r\n//                 setLoadingReservations(false);\r\n//             }\r\n//         };\r\n\r\n//         fetchReservations();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchServices = async () => {\r\n//             try {\r\n//                 const response = await authAPI().get(endpoints['services']);\r\n//                 setServices(response.data);\r\n//             } catch (err) {\r\n//                 setError('Failed to fetch services');\r\n//             } finally {\r\n//                 setLoadingServices(false);\r\n//             }\r\n//         };\r\n\r\n//         fetchServices();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchServiceList = async () => {\r\n//             try {\r\n//                 const response = await authAPI().get(endpoints['reservation_service']);\r\n//                 setServiceList(response.data);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching service list:', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchServiceList();\r\n//     }, []);\r\n\r\n//     const handleServiceChange = (e) => {\r\n//         const selectedServiceId = e.target.value;\r\n//         const selectedService = services.find(service => service.id === parseInt(selectedServiceId));\r\n//         setSelectedService(selectedServiceId);\r\n//         if (selectedService) {\r\n//             setNameService(selectedService.nameService);\r\n//             setPrice(selectedService.price);\r\n//         }\r\n//     };\r\n\r\n//     const handleQuantityChange = (e) => {\r\n//         const newQuantity = parseInt(e.target.value);\r\n//         if (newQuantity > 0) {\r\n//             setQuantity(newQuantity);\r\n//         }\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         if (!selectedReservation || !selectedService) {\r\n//             enqueueSnackbar('Vui lòng chọn phiếu đặt phòng và dịch vụ', { variant: 'warning' });\r\n//             return;\r\n//         }\r\n\r\n//         const serviceData = {\r\n//             reservation: selectedReservation,\r\n//             service: selectedService,\r\n//             quantity,\r\n//         };\r\n\r\n//         try {\r\n//             const response = await authAPI().post(endpoints['reservation_service'], serviceData);\r\n//             if (response.status === 201) {\r\n//                 enqueueSnackbar('Dịch vụ đã được thêm thành công', { variant: 'success' });\r\n//                 setNameService('');\r\n//                 setPrice(0);\r\n//                 setQuantity(1);\r\n//                 setSelectedReservation('');\r\n//                 setSelectedService('');\r\n\r\n//                 // Refresh service list after adding a new service\r\n//                 const updatedServiceList = await authAPI().get(endpoints['reservation_service']);\r\n//                 setServiceList(updatedServiceList.data);\r\n//             } else {\r\n//                 enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error adding service:', error);\r\n//             enqueueSnackbar('Có lỗi xảy ra, vui lòng thử lại', { variant: 'error' });\r\n//         }\r\n//     };\r\n\r\n//     const formatCurrency = (amount) => {\r\n//         return new Intl.NumberFormat('vi-VN', {\r\n//             style: 'currency',\r\n//             currency: 'VND'\r\n//         }).format(amount);\r\n//     };\r\n\r\n//     const groupedServices = serviceList.reduce((acc, service) => {\r\n//         const key = `${service.guest_name} - Phòng: ${service.room_names}`;\r\n//         if (!acc[key]) {\r\n//             acc[key] = [];\r\n//         }\r\n//         acc[key].push(service);\r\n//         return acc;\r\n//     }, {});\r\n\r\n//     return (\r\n//         <Container>\r\n//             <div css={styles}>\r\n//                 <h1>Thêm dịch vụ</h1>\r\n//                 <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Tên dịch vụ</label>\r\n//                         {loadingServices ? (\r\n//                             <p>Loading services...</p>\r\n//                         ) : (\r\n//                             <select\r\n//                                 value={selectedService}\r\n//                                 onChange={handleServiceChange}\r\n//                                 required\r\n//                             >\r\n//                                 <option value=\"\">Chọn dịch vụ</option>\r\n//                                 {services.map((service) => (\r\n//                                     <option key={service.id} value={service.id}>\r\n//                                         {service.nameService} - Giá: {formatCurrency(service.price)}\r\n//                                     </option>\r\n//                                 ))}\r\n//                             </select>\r\n//                         )}\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label>Số lượng</label>\r\n//                         <input\r\n//                             type=\"number\"\r\n//                             value={quantity}\r\n//                             onChange={handleQuantityChange}\r\n//                             required\r\n//                             min=\"1\"\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label>Tổng phí dịch vụ</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={formatCurrency(price * quantity)}\r\n//                             readOnly\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label>Chọn phiếu đặt phòng</label>\r\n//                         {loadingReservations ? (\r\n//                             <p>Loading reservations...</p>\r\n//                         ) : (\r\n//                             <select\r\n//                                 value={selectedReservation}\r\n//                                 onChange={(e) => setSelectedReservation(e.target.value)}\r\n//                                 required\r\n//                             >\r\n//                                 <option value=\"\">Chọn phiếu</option>\r\n//                                 {reservations.map((reservation) => (\r\n//                                     <option key={reservation.id} value={reservation.id}>\r\n//                                         {reservation.guest.name} - {reservation.room.map(r => r.nameRoom).join(', ')}\r\n//                                     </option>\r\n//                                 ))}\r\n//                             </select>\r\n//                         )}\r\n//                     </div>\r\n//                     <button type=\"submit\">Thêm dịch vụ</button>\r\n//                 </form>\r\n//                 <div css={listStyles}>\r\n//                     <h1>Danh sách phiếu đặt phòng</h1>\r\n//                     {Object.entries(groupedServices).map(([key, services]) => (\r\n//                         <div key={key} css={groupStyle}>\r\n//                             <h2 css={groupTitleStyle}>{key}</h2>\r\n//                             <Row>\r\n//                                 {services.map((service, index) => (\r\n//                                     <Col key={index} sm=\"12\" md=\"6\" lg=\"4\">\r\n//                                         <Card css={cardStyle}>\r\n//                                             <CardBody>\r\n//                                                 <CardTitle tag=\"h5\" css={cardTitleStyle}>{service.service_name}</CardTitle>\r\n//                                                 <CardText css={cardTextStyle}>\r\n//                                                     Dịch vụ: {service.nameService} <br />\r\n//                                                     Giá: {service.price.toLocaleString()} VND<br />\r\n//                                                     Số lượng: {service.quantity}\r\n//                                                 </CardText>\r\n//                                             </CardBody>\r\n//                                         </Card>\r\n//                                     </Col>\r\n//                                 ))}\r\n//                             </Row>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// const styles = css`\r\n//     padding: 120px;\r\n//     background-color: #f9f9f9;\r\n//     h1 {\r\n//         margin-bottom: 20px;\r\n//     }\r\n//     .form-group {\r\n//         margin-bottom: 15px;\r\n//         label {\r\n//             display: block;\r\n//             margin-bottom: 5px;\r\n//         }\r\n//         input, select {\r\n//             width: 100%;\r\n//             padding: 8px;\r\n//             box-sizing: border-box;\r\n//         }\r\n//     }\r\n//     button {\r\n//         padding: 10px 20px;\r\n//         background-color: #0000cd;\r\n//         color: #fff;\r\n//         border: none;\r\n//         cursor: pointer;\r\n//         &:hover {\r\n//             background-color: #00008b;\r\n//         }\r\n//     }\r\n//     p {\r\n//         margin-top: 15px;\r\n//         color: #ff1414;\r\n//     }\r\n// `;\r\n\r\n// const listStyles = css`\r\n//     padding: 20px;\r\n//     background-color: #f9f9f9;\r\n//     h1 {\r\n//         margin-bottom: 20px;\r\n//         text-align: center;\r\n//     }\r\n// `;\r\n\r\n// const groupStyle = css`\r\n//     margin-bottom: 20px;\r\n//     padding: 10px;\r\n//     background-color: #fff;\r\n//     border-radius: 8px;\r\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n// `;\r\n\r\n// const groupTitleStyle = css`\r\n//     font-size: 1.25rem;\r\n//     color: #343a40;\r\n//     margin-bottom: 10px;\r\n// `;\r\n\r\n// const cardStyle = css`\r\n//     margin-bottom: 10px;\r\n//     border: 1px solid #ddd;\r\n//     border-radius: 8px;\r\n//     box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n//     transition: transform 0.3s ease;\r\n//     &:hover {\r\n//         transform: scale(1.05);\r\n//     }\r\n// `;\r\n\r\n// const cardTitleStyle = css`\r\n//     font-size: 1rem;\r\n//     color: #007bff;\r\n// `;\r\n\r\n// const cardTextStyle = css`\r\n//     font-size: 0.875rem;\r\n//     color: #343a40;\r\n// `;\r\n\r\n// export default AddService;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}